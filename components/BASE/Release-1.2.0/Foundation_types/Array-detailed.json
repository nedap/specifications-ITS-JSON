{
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$id": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/BASE/Release-1.2.0/Foundation_types/Array-detailed.json",
    "title": "Array",
    "description": "Container whose storage is assumed to be contiguous.",
    "$comments": "Defined in Foundation_types IM, inherits from Container",
    "type": "array",
    "$inherits": [
        "all-detailed.json#/definitions/Container"
    ],
    "$functions": {
        "has": {
            "description": "Test for membership of a value.",
            "parameters": {
                "v": {
                    "$ref": "all-detailed.json#/definitions/T"
                }
            },
            "required_parameters": [
                "v"
            ],
            "return": {
                "$ref": "all-detailed.json#/definitions/Boolean"
            }
        },
        "count": {
            "description": "Number of items in container.",
            "return": {
                "$ref": "all-detailed.json#/definitions/Integer"
            }
        },
        "is_empty": {
            "description": "True if container is empty.",
            "return": {
                "$ref": "all-detailed.json#/definitions/Boolean"
            }
        },
        "there_exists": {
            "description": "Existential quantifier applied to container, taking one agent argument `_test_` whose signature is `(v:T): Boolean`.",
            "parameters": {
                "test": []
            },
            "required_parameters": [
                "test"
            ],
            "return": {
                "$ref": "all-detailed.json#/definitions/Boolean"
            }
        },
        "for_all": {
            "description": "Universal quantifier applied to container, taking one agent argument `_test_` whose signature is `(v:T): Boolean`.",
            "parameters": {
                "test": []
            },
            "required_parameters": [
                "test"
            ],
            "return": {
                "$ref": "all-detailed.json#/definitions/Boolean"
            }
        },
        "matching": {
            "description": "Return a List all items matching the predicate function `_test_` which has signature `(v:T): Boolean`. If no matches, an empty List is returned.",
            "parameters": {
                "test": []
            },
            "required_parameters": [
                "test"
            ],
            "return": {
                "type": "array",
                "items": {
                    "$ref": "all-detailed.json#/definitions/T"
                }
            }
        },
        "select": {
            "description": "Return first item matching the predicate function `_test_` which has signature `(v:T): Boolean`, or Void if no match.",
            "parameters": {
                "test": []
            },
            "required_parameters": [
                "test"
            ],
            "return": {
                "$ref": "all-detailed.json#/definitions/T"
            }
        },
        "item": {
            "description": "Return item for key  `_a_key_`.",
            "parameters": {
                "a_key": {
                    "$ref": "all-detailed.json#/definitions/Integer"
                }
            },
            "required_parameters": [
                "a_key"
            ],
            "return": {
                "$ref": "all-detailed.json#/definitions/T"
            }
        }
    }
}
{
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$id": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/BASE/Release-1.0.3/Base_types/ISO8601_DATE_TIME-detailed.json",
    "title": "ISO8601_DATE_TIME",
    "description": "Represents an absolute point in time, specified to the second.\n\nNote that this class includes 2 deviations from ISO 8601:2004:\n\n* for partial date/times, any part of the date/time up to the month may be missing, not just seconds and minutes as in the standard;\n* the time 24:00:00 is not allowed, since it would mean the date was really on the next day.",
    "$comments": "Defined in Base_types IM, inherits from ISO8601_TYPE",
    "type": "object",
    "properties": {
        "_type": {
            "enum": [
                "ISO8601_DATE_TIME",
                "DV_DATE_TIME"
            ]
        }
    },
    "$inherits": [
        "all-detailed.json#/definitions/ISO8601_TYPE"
    ],
    "$children": [
        "https://specifications.openehr.org/releases/ITS-JSON/latest/components/RM/Release-1.0.3/Data_types/all-detailed.json#/definitions/DV_DATE_TIME"
    ],
    "$functions": {
        "valid_year": {
            "parameters": {
                "y": {
                    "$ref": "all-detailed.json#/definitions/Integer"
                }
            },
            "required_parameters": [
                "y"
            ],
            "return": {
                "$ref": "all-detailed.json#/definitions/Boolean"
            }
        },
        "valid_month": {
            "parameters": {
                "m": {
                    "$ref": "all-detailed.json#/definitions/Integer"
                }
            },
            "required_parameters": [
                "m"
            ],
            "return": {
                "$ref": "all-detailed.json#/definitions/Boolean"
            }
        },
        "valid_day": {
            "description": "True if d >= 1 and d <= days_in_month (m, y)",
            "parameters": {
                "y": {
                    "$ref": "all-detailed.json#/definitions/Integer"
                },
                "m": {
                    "$ref": "all-detailed.json#/definitions/Integer"
                },
                "d": {
                    "$ref": "all-detailed.json#/definitions/Integer"
                }
            },
            "required_parameters": [
                "y",
                "m",
                "d"
            ],
            "return": {
                "$ref": "all-detailed.json#/definitions/Boolean"
            }
        },
        "valid_hour": {
            "description": "True if (h >= 0 and h < Hours_in_day) or (h = Hours_in_day and m = 0 and s = 0)",
            "parameters": {
                "h": {
                    "$ref": "all-detailed.json#/definitions/Any"
                },
                "m": {
                    "$ref": "all-detailed.json#/definitions/Any"
                },
                "s": {
                    "$ref": "all-detailed.json#/definitions/Integer"
                }
            },
            "required_parameters": [
                "h",
                "m",
                "s"
            ],
            "return": {
                "$ref": "all-detailed.json#/definitions/Boolean"
            }
        },
        "valid_minute": {
            "description": "True if m >= 0 and m < Minutes_in_hour.",
            "parameters": {
                "m": {
                    "$ref": "all-detailed.json#/definitions/Integer"
                }
            },
            "required_parameters": [
                "m"
            ],
            "return": {
                "$ref": "all-detailed.json#/definitions/Boolean"
            }
        },
        "valid_second": {
            "description": "True if s >= 0 and s < Seconds_in_minute .",
            "parameters": {
                "s": {
                    "$ref": "all-detailed.json#/definitions/Integer"
                }
            },
            "required_parameters": [
                "s"
            ],
            "return": {
                "$ref": "all-detailed.json#/definitions/Boolean"
            }
        },
        "valid_fractional_second": {
            "description": "True if fs >= 0.0 and fs < 1.0 .",
            "parameters": {
                "fs": {
                    "$ref": "all-detailed.json#/definitions/Double"
                }
            },
            "required_parameters": [
                "fs"
            ],
            "return": {
                "$ref": "all-detailed.json#/definitions/Boolean"
            }
        },
        "infix <": {
            "description": "Arithmetic comparison. In conjunction with \u2018=\u2019, enables the definition of the operators \u2018>\u2019, \u2018>=\u2019, \u2018<=\u2019, \u2018<>\u2019. In real type systems, this operator might be defined on another class for comparability.",
            "parameters": {
                "other": {
                    "$ref": "all-detailed.json#/definitions/Ordered"
                }
            },
            "required_parameters": [
                "other"
            ],
            "return": {
                "$ref": "all-detailed.json#/definitions/Boolean"
            }
        },
        "is_partial": {
            "description": "True if this date time is partial, i.e. if seconds or more is missing.",
            "return": {
                "$ref": "all-detailed.json#/definitions/Boolean"
            }
        },
        "is_extended": {
            "description": "True if this date/time uses \u2018-\u2019, \u2018:\u2019 separators.",
            "return": {
                "$ref": "all-detailed.json#/definitions/Boolean"
            }
        },
        "year": {
            "description": "Year.",
            "return": {
                "$ref": "all-detailed.json#/definitions/Integer"
            }
        },
        "month": {
            "description": "Month in year.",
            "return": {
                "$ref": "all-detailed.json#/definitions/Integer"
            }
        },
        "day": {
            "description": "Day in month.",
            "return": {
                "$ref": "all-detailed.json#/definitions/Integer"
            }
        },
        "month_unknown": {
            "description": "Indicates whether month in year is unknown.",
            "return": {
                "$ref": "all-detailed.json#/definitions/Boolean"
            }
        },
        "day_unknown": {
            "description": "Indicates whether day in month is unknown.",
            "return": {
                "$ref": "all-detailed.json#/definitions/Boolean"
            }
        },
        "hour": {
            "description": "Hour in day.",
            "return": {
                "$ref": "all-detailed.json#/definitions/Integer"
            }
        },
        "minute": {
            "description": "Minute in hour.",
            "return": {
                "$ref": "all-detailed.json#/definitions/Integer"
            }
        },
        "second": {
            "description": "Second in minute.",
            "return": {
                "$ref": "all-detailed.json#/definitions/Integer"
            }
        },
        "fractional_second": {
            "description": "Fractional seconds.",
            "return": {
                "$ref": "all-detailed.json#/definitions/Real"
            }
        },
        "has_fractional_second": {
            "description": "True if the fractional_second part is signficant (i.e. even if = 0.0).",
            "return": {
                "$ref": "all-detailed.json#/definitions/Boolean"
            }
        },
        "minute_unknown": {
            "description": "Indicates whether minute in hour is known.",
            "return": {
                "$ref": "all-detailed.json#/definitions/Boolean"
            }
        },
        "second_unknown": {
            "description": "Indicates whether minute in hour is known.",
            "return": {
                "$ref": "all-detailed.json#/definitions/Boolean"
            }
        },
        "is_decimal_sign_comma": {
            "description": "True if this time has a decimal part indicated by \u2018,\u2019 (comma) rather than \u2018.\u2019 (period).",
            "return": {
                "$ref": "all-detailed.json#/definitions/Boolean"
            }
        },
        "timezone": {
            "description": "Timezone; may be Void.",
            "return": {
                "$ref": "all-detailed.json#/definitions/ISO8601_TIMEZONE"
            }
        },
        "as_string": {
            "description": "ISO8601 string for date/time, in format `YYYYMMDDThhmmss[,sss][Z | \u00b1hh[mm]]` or in extended format `YYYY-MM-DDThh:mm:ss[,sss][Z | \u00b1hh[mm]]` or a partial variant; see valid_iso8601_date_time() below.",
            "return": {
                "$ref": "all-detailed.json#/definitions/String"
            }
        },
        "valid_iso8601_date_time": {
            "description": "String is a valid ISO 8601 date-time, i.e. takes the form:\n\n* YYYYMMDDThhmmss[,sss][Z | \uf0b1hh[mm]]\n\nor the extended form:\n\n* YYYY-MM-DDThh:mm:ss[,sss][Z | \uf0b1hh[mm]]\n\nor one of the partial forms:\n\n* YYYYMMDDThhmm\n* YYYYMMDDThh\n\nor the equivalent extended forms:\n\n* YYYY-MM-DDThh:mm\n* YYYY-MM-DDThh\n\n(meanings as in DV_DATE, DV_TIME) and the values in each field are valid.",
            "parameters": {
                "s": {
                    "$ref": "all-detailed.json#/definitions/String"
                }
            },
            "required_parameters": [
                "s"
            ],
            "return": {
                "$ref": "all-detailed.json#/definitions/Boolean"
            }
        }
    },
    "$invariants": {
        "Post": "Result = fs >= 0.0 and fs < 1.0 .",
        "Year_valid": "valid_year (year)",
        "Month_valid": "valid_month (month)",
        "Day_valid": "valid_day(year, month, day)",
        "Hour_valid": "valid_hour (hour, minute, second)",
        "Minute_valid": "not minute_unknown implies valid_minute(minute)",
        "Second_valid": "not second_unknown implies valid_second (second)",
        "Fractional_second_valid": "has_fractional_second implies (not second_unknown and valid_fractional_second (fractional_second))",
        "Partial_validity_year": "not month_unknown",
        "Partial_validity_month": "not month_unknown",
        "Partial_validity_day": "not day_unknown",
        "Partial_validity_hour": "not hour_unknown",
        "Partial_validity_minute": "minute_unknown implies second_unknown",
        "Pre": "not second_unknown"
    }
}
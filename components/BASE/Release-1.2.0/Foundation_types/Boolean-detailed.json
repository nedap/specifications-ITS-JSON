{
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$id": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/BASE/Release-1.2.0/Foundation_types/Boolean-detailed.json",
    "title": "Boolean",
    "description": "Type representing minimal interface of built-in Boolean type.",
    "$comments": "Defined in Foundation_types IM",
    "type": "boolean",
    "$functions": {
        "conjunction": {
            "description": "Logical conjunction of this with `_other_`.",
            "parameters": {
                "other": {
                    "$ref": "all-detailed.json#/definitions/Boolean"
                }
            },
            "required_parameters": [
                "other"
            ],
            "return": {
                "$ref": "all-detailed.json#/definitions/Boolean"
            }
        },
        "semistrict_conjunction": {
            "description": "Boolean semi-strict conjunction with `_other_`.",
            "parameters": {
                "other": {
                    "$ref": "all-detailed.json#/definitions/Boolean"
                }
            },
            "required_parameters": [
                "other"
            ],
            "return": {
                "$ref": "all-detailed.json#/definitions/Boolean"
            }
        },
        "disjunction": {
            "description": "Boolean disjunction with `_other_`.",
            "parameters": {
                "other": {
                    "$ref": "all-detailed.json#/definitions/Boolean"
                }
            },
            "required_parameters": [
                "other"
            ],
            "return": {
                "$ref": "all-detailed.json#/definitions/Boolean"
            }
        },
        "semistrict_disjunction": {
            "description": "Boolean semi-strict disjunction with `_other_`.",
            "parameters": {
                "other": {
                    "$ref": "all-detailed.json#/definitions/Boolean"
                }
            },
            "required_parameters": [
                "other"
            ],
            "return": {
                "$ref": "all-detailed.json#/definitions/Boolean"
            }
        },
        "exclusive_disjunction": {
            "description": "Boolean exclusive or with `_other_`.",
            "parameters": {
                "other": {
                    "$ref": "all-detailed.json#/definitions/Boolean"
                }
            },
            "required_parameters": [
                "other"
            ],
            "return": {
                "$ref": "all-detailed.json#/definitions/Boolean"
            }
        },
        "implication": {
            "description": "Boolean implication of `_other_` (semi-strict)",
            "parameters": {
                "other": {
                    "$ref": "all-detailed.json#/definitions/Boolean"
                }
            },
            "required_parameters": [
                "other"
            ],
            "return": {
                "$ref": "all-detailed.json#/definitions/Boolean"
            }
        },
        "negation": {
            "description": "Boolean negation of the current value.",
            "return": {
                "$ref": "all-detailed.json#/definitions/Boolean"
            }
        }
    },
    "$invariants": {
        "Involutive_negation": "is_equal (not (not self))",
        "Non_contradiction": "not (self and (not self))",
        "Completeness": "self or else (not self)",
        "Post_de_Morgan": "Result = not (not self and then not other)",
        "Post_commutative": "Result = (other or Current)",
        "Post_consistent_with_semi_strict": "Result implies (self or else other)",
        "Post_definition": "Result = (not self or else other)"
    }
}
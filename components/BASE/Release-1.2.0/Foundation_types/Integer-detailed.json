{
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$id": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/BASE/Release-1.2.0/Foundation_types/Integer-detailed.json",
    "title": "Integer",
    "description": "Type representing minimal interface of built-in Integer type.",
    "$comments": "Defined in Foundation_types IM, inherits from Ordered_Numeric",
    "type": "integer",
    "$inherits": [
        "all-detailed.json#/definitions/Ordered_Numeric"
    ],
    "$functions": {
        "add": {
            "description": "Integer addition.",
            "parameters": {
                "other": {
                    "$ref": "all-detailed.json#/definitions/Integer"
                }
            },
            "required_parameters": [
                "other"
            ],
            "return": {
                "$ref": "all-detailed.json#/definitions/Integer"
            }
        },
        "subtract": {
            "description": "Integer subtraction.",
            "parameters": {
                "other": {
                    "$ref": "all-detailed.json#/definitions/Integer"
                }
            },
            "required_parameters": [
                "other"
            ],
            "return": {
                "$ref": "all-detailed.json#/definitions/Integer"
            }
        },
        "multiply": {
            "description": "Integer multiplication.",
            "parameters": {
                "other": {
                    "$ref": "all-detailed.json#/definitions/Integer"
                }
            },
            "required_parameters": [
                "other"
            ],
            "return": {
                "$ref": "all-detailed.json#/definitions/Integer"
            }
        },
        "divide": {
            "description": "Integer division.",
            "parameters": {
                "other": {
                    "$ref": "all-detailed.json#/definitions/Integer"
                }
            },
            "required_parameters": [
                "other"
            ],
            "return": {
                "$ref": "all-detailed.json#/definitions/Double"
            }
        },
        "exponent": {
            "description": "Integer exponentiation.",
            "parameters": {
                "other": {
                    "$ref": "all-detailed.json#/definitions/Double"
                }
            },
            "required_parameters": [
                "other"
            ],
            "return": {
                "$ref": "all-detailed.json#/definitions/Double"
            }
        },
        "negative": {
            "description": "Generate negative of current Integer value.",
            "return": {
                "$ref": "all-detailed.json#/definitions/Integer"
            }
        },
        "less_than": {
            "description": "Returns True if current Integer is less than `_other_`.",
            "parameters": {
                "other": {
                    "$ref": "all-detailed.json#/definitions/Integer"
                }
            },
            "required_parameters": [
                "other"
            ],
            "return": {
                "$ref": "all-detailed.json#/definitions/Boolean"
            }
        },
        "less_than_or_equal": {
            "description": "True if current object less than or equal to `_other_`.",
            "parameters": {
                "other": {
                    "$ref": "all-detailed.json#/definitions/Ordered"
                }
            },
            "required_parameters": [
                "other"
            ],
            "return": {
                "$ref": "all-detailed.json#/definitions/Boolean"
            }
        },
        "greater_than": {
            "description": "True if current object greater than `_other_`.",
            "parameters": {
                "other": {
                    "$ref": "all-detailed.json#/definitions/Ordered"
                }
            },
            "required_parameters": [
                "other"
            ],
            "return": {
                "$ref": "all-detailed.json#/definitions/Boolean"
            }
        },
        "greater_than_or_equal": {
            "description": "True if current object greater than or equal to `_other_`.",
            "parameters": {
                "other": {
                    "$ref": "all-detailed.json#/definitions/Ordered"
                }
            },
            "required_parameters": [
                "other"
            ],
            "return": {
                "$ref": "all-detailed.json#/definitions/Boolean"
            }
        },
        "modulo": {
            "description": "Return self modulo other.",
            "parameters": {
                "mod": {
                    "$ref": "all-detailed.json#/definitions/Integer"
                }
            },
            "required_parameters": [
                "mod"
            ],
            "return": {
                "$ref": "all-detailed.json#/definitions/Integer"
            }
        },
        "is_equal": {
            "description": "Value equality: return True if `this` and `_other_` are attached to objects considered to be equal in value.",
            "parameters": {
                "other": {
                    "description": "Other object for comparison.",
                    "$ref": "all-detailed.json#/definitions/Integer"
                }
            },
            "required_parameters": [
                "other"
            ],
            "return": {
                "$ref": "all-detailed.json#/definitions/Boolean"
            }
        },
        "equal": {
            "description": "Reference equality for reference types, value equality for value types.",
            "parameters": {
                "other": {
                    "description": "Other object for comparison.",
                    "$ref": "all-detailed.json#/definitions/Integer"
                }
            },
            "required_parameters": [
                "other"
            ],
            "return": {
                "$ref": "all-detailed.json#/definitions/Boolean"
            }
        }
    },
    "$invariants": {
        "Post_result": "Result = (other <= self)"
    }
}
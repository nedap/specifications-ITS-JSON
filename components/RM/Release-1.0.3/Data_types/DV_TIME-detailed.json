{
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$id": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/RM/Release-1.0.3/Data_types/DV_TIME-detailed.json",
    "title": "DV_TIME",
    "description": "Represents an absolute point in time from an origin usually interpreted as eaning the start of the current day, specified to the second. Semantics defined by ISO 8601. \n\nUsed for recording real world times, rather than scientifically measured fine amounts of time. The partial form is used for approximate times of events and substance administrations. ",
    "$comments": "Defined in Data_types IM, inherits from DV_TEMPORAL, ISO8601_TIME",
    "type": "object",
    "properties": {
        "normal_status": {
            "description": "Optional normal status indicator of value with respect to normal range for this value. Often included by lab, even if the normal range itself is not included. Coded by ordinals in series HHH, HH, H, (nothing), L, LL, LLL; see openEHR terminology group  normal status . ",
            "$ref": "all-detailed.json#/definitions/CODE_PHRASE"
        },
        "normal_range": {
            "description": "Optional normal range. ",
            "$ref": "all-detailed.json#/definitions/DV_INTERVAL"
        },
        "other_reference_ranges": {
            "description": "Optional tagged other reference ranges for this value in its particular measurement context.",
            "type": "array",
            "items": {
                "$ref": "all-detailed.json#/definitions/REFERENCE_RANGE"
            }
        },
        "magnitude_status": {
            "description": "Optional status of magnitude with values: \n\n* =   :   magnitude is a point value \n* <   :   value is < magnitude \n* >   :   value is > magnitude \n* \\<= : value is <= magnitude \n* >= : value is >= magnitude \n* ~   :   value is approximately magnitude \n\nIf not present, meaning is  = . \n",
            "$ref": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/BASE/Release-1.0.3/Base_types/all-detailed.json#/definitions/String"
        },
        "accuracy": {
            "$ref": "all-detailed.json#/definitions/DV_DURATION"
        },
        "value": {
            "description": "ISO8601 time string",
            "$ref": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/BASE/Release-1.0.3/Base_types/all-detailed.json#/definitions/String"
        }
    },
    "required": [
        "value"
    ],
    "$inherits": [
        "all-detailed.json#/definitions/DV_TEMPORAL",
        "https://specifications.openehr.org/releases/ITS-JSON/latest/components/BASE/Release-1.0.3/Base_types/all-detailed.json#/definitions/ISO8601_TIME"
    ],
    "$functions": {
        "valid_year": {
            "parameters": {
                "y": {
                    "$ref": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/BASE/Release-1.0.3/Base_types/all-detailed.json#/definitions/Integer"
                }
            },
            "required_parameters": [
                "y"
            ],
            "return": {
                "$ref": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/BASE/Release-1.0.3/Base_types/all-detailed.json#/definitions/Boolean"
            }
        },
        "valid_month": {
            "parameters": {
                "m": {
                    "$ref": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/BASE/Release-1.0.3/Base_types/all-detailed.json#/definitions/Integer"
                }
            },
            "required_parameters": [
                "m"
            ],
            "return": {
                "$ref": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/BASE/Release-1.0.3/Base_types/all-detailed.json#/definitions/Boolean"
            }
        },
        "valid_day": {
            "description": "True if d >= 1 and d <= days_in_month (m, y)",
            "parameters": {
                "y": {
                    "$ref": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/BASE/Release-1.0.3/Base_types/all-detailed.json#/definitions/Integer"
                },
                "m": {
                    "$ref": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/BASE/Release-1.0.3/Base_types/all-detailed.json#/definitions/Integer"
                },
                "d": {
                    "$ref": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/BASE/Release-1.0.3/Base_types/all-detailed.json#/definitions/Integer"
                }
            },
            "required_parameters": [
                "y",
                "m",
                "d"
            ],
            "return": {
                "$ref": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/BASE/Release-1.0.3/Base_types/all-detailed.json#/definitions/Boolean"
            }
        },
        "valid_hour": {
            "description": "True if (h >= 0 and h < Hours_in_day) or (h = Hours_in_day and m = 0 and s = 0)",
            "parameters": {
                "h": {
                    "$ref": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/BASE/Release-1.0.3/Base_types/all-detailed.json#/definitions/Any"
                },
                "m": {
                    "$ref": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/BASE/Release-1.0.3/Base_types/all-detailed.json#/definitions/Any"
                },
                "s": {
                    "$ref": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/BASE/Release-1.0.3/Base_types/all-detailed.json#/definitions/Integer"
                }
            },
            "required_parameters": [
                "h",
                "m",
                "s"
            ],
            "return": {
                "$ref": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/BASE/Release-1.0.3/Base_types/all-detailed.json#/definitions/Boolean"
            }
        },
        "valid_minute": {
            "description": "True if m >= 0 and m < Minutes_in_hour.",
            "parameters": {
                "m": {
                    "$ref": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/BASE/Release-1.0.3/Base_types/all-detailed.json#/definitions/Integer"
                }
            },
            "required_parameters": [
                "m"
            ],
            "return": {
                "$ref": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/BASE/Release-1.0.3/Base_types/all-detailed.json#/definitions/Boolean"
            }
        },
        "valid_second": {
            "description": "True if s >= 0 and s < Seconds_in_minute .",
            "parameters": {
                "s": {
                    "$ref": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/BASE/Release-1.0.3/Base_types/all-detailed.json#/definitions/Integer"
                }
            },
            "required_parameters": [
                "s"
            ],
            "return": {
                "$ref": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/BASE/Release-1.0.3/Base_types/all-detailed.json#/definitions/Boolean"
            }
        },
        "valid_fractional_second": {
            "description": "True if fs >= 0.0 and fs < 1.0 .",
            "parameters": {
                "fs": {
                    "$ref": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/BASE/Release-1.0.3/Base_types/all-detailed.json#/definitions/Double"
                }
            },
            "required_parameters": [
                "fs"
            ],
            "return": {
                "$ref": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/BASE/Release-1.0.3/Base_types/all-detailed.json#/definitions/Boolean"
            }
        },
        "infix <": {
            "parameters": {
                "other": {
                    "$ref": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/BASE/Release-1.0.3/Base_types/all-detailed.json#/definitions/Ordered"
                }
            },
            "required_parameters": [
                "other"
            ],
            "return": {
                "$ref": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/BASE/Release-1.0.3/Base_types/all-detailed.json#/definitions/Boolean"
            }
        },
        "is_partial": {
            "description": "True if this time is partial, i.e. if seconds or more is missing.",
            "return": {
                "$ref": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/BASE/Release-1.0.3/Base_types/all-detailed.json#/definitions/Boolean"
            }
        },
        "is_extended": {
            "description": "True if this time uses \u2018:\u2019 separators.",
            "return": {
                "$ref": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/BASE/Release-1.0.3/Base_types/all-detailed.json#/definitions/Boolean"
            }
        },
        "hour": {
            "description": "Hour in day, in 24-hour time.",
            "return": {
                "$ref": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/BASE/Release-1.0.3/Base_types/all-detailed.json#/definitions/Integer"
            }
        },
        "minute": {
            "description": "Minute in hour.",
            "return": {
                "$ref": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/BASE/Release-1.0.3/Base_types/all-detailed.json#/definitions/Integer"
            }
        },
        "second": {
            "return": {
                "$ref": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/BASE/Release-1.0.3/Base_types/all-detailed.json#/definitions/Integer"
            }
        },
        "fractional_second": {
            "description": "Fractional seconds.",
            "return": {
                "$ref": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/BASE/Release-1.0.3/Base_types/all-detailed.json#/definitions/Real"
            }
        },
        "has_fractional_second": {
            "description": "True if the fractional_second part is signficant (i.e. even if = 0.0).",
            "return": {
                "$ref": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/BASE/Release-1.0.3/Base_types/all-detailed.json#/definitions/Boolean"
            }
        },
        "minute_unknown": {
            "description": "Indicates whether minute is unknown. If so, the time is of the form \u201chh\u201d.",
            "return": {
                "$ref": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/BASE/Release-1.0.3/Base_types/all-detailed.json#/definitions/Boolean"
            }
        },
        "second_unknown": {
            "description": "Indicates whether second is unknown. If so and month is known, the time is of the form \u201chh:mm\u201d or \u201chhmm\u201d.",
            "return": {
                "$ref": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/BASE/Release-1.0.3/Base_types/all-detailed.json#/definitions/Boolean"
            }
        },
        "is_decimal_sign_comma": {
            "description": "True if this time has a decimal part indicated by \u2018,\u2019 (comma) rather than \u2018.\u2019 (period).",
            "return": {
                "$ref": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/BASE/Release-1.0.3/Base_types/all-detailed.json#/definitions/Boolean"
            }
        },
        "timezone": {
            "return": {
                "$ref": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/BASE/Release-1.0.3/Base_types/all-detailed.json#/definitions/ISO8601_TIMEZONE"
            }
        },
        "as_string": {
            "description": "ISO8601 string for time, i.e. in form: hhmmss[,sss][Z|\uf0b1hh[mm]] or the extended form: hh:mm:ss[,sss][Z|\uf0b1hh[mm]], or a partial invariant. See valid_iso8601_time for validity.",
            "return": {
                "$ref": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/BASE/Release-1.0.3/Base_types/all-detailed.json#/definitions/String"
            }
        },
        "valid_iso8601_time": {
            "description": "String is a valid ISO 8601 date, i.e. takes the form:\n\n* hhmmss[,sss][Z | \uf0b1hh[mm]]\n\nor the extended form:\n\n* hh:mm:ss[,sss][Z | \u00b1hh[mm]]\n\nor one of the partial forms:\n\n* hhmm or hh \n\nor the extended form:\n\n* hh:mm\n\nwith an additional optional timezone indicator of:\n* Z or \uf0b1hh[mm]\n\nWhere:\n\n* hh is \u201c00\u201d - \u201c23\u201d (0-filled to two digits)\n* mm is \u201c00\u201d - \u201c59\u201d (0-filled to two digits)\n* ss is \u201c00\u201d - \u201c60\u201d (0-filled to two digits)\n* sss is any numeric string, representing an optional fractional second\n* Z is a literal meaning UTC (modern replacement for GMT), i.e. timezone +0000\n* \uf0b1hh[mm], i.e. +hhmm, +hh, -hhmm, -hh indicating the timezone ",
            "return": {
                "$ref": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/BASE/Release-1.0.3/Base_types/all-detailed.json#/definitions/Boolean"
            }
        },
        "is_strictly_comparable_to": {
            "description": "Test if two instances are strictly comparable.",
            "parameters": {
                "other": {
                    "$ref": "all-detailed.json#/definitions/DV_ORDERED"
                }
            },
            "required_parameters": [
                "other"
            ],
            "return": {
                "$ref": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/BASE/Release-1.0.3/Base_types/all-detailed.json#/definitions/Boolean"
            }
        },
        "is_simple": {
            "description": "True if this quantity has no reference ranges.",
            "return": {
                "$ref": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/BASE/Release-1.0.3/Base_types/all-detailed.json#/definitions/Boolean"
            }
        },
        "is_normal": {
            "description": "Value is in the normal range, determined by comparison of the value to the normal_range if present, or by the normal_status marker if present. \n",
            "return": {
                "$ref": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/BASE/Release-1.0.3/Base_types/all-detailed.json#/definitions/Boolean"
            }
        },
        "valid_magnitude_status": {
            "description": "Test whether a string value is one of the valid values for the magnitude_status attribute. ",
            "return": {
                "$ref": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/BASE/Release-1.0.3/Base_types/all-detailed.json#/definitions/Boolean"
            }
        },
        "magnitude": {
            "description": "Numeric value of the time as seconds since the start of day, i.e. 00:00:00. ",
            "return": {
                "$ref": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/BASE/Release-1.0.3/Base_types/all-detailed.json#/definitions/Real"
            }
        },
        "accuracy_unknown": {
            "description": "True if accuracy is not known, e.g. due to not being recorded or discernable.",
            "return": {
                "$ref": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/BASE/Release-1.0.3/Base_types/all-detailed.json#/definitions/Boolean"
            }
        },
        "diff": {
            "description": "Difference of two quantities.",
            "parameters": {
                "other": {
                    "$ref": "all-detailed.json#/definitions/DV_TIME"
                }
            },
            "required_parameters": [
                "other"
            ],
            "return": {
                "$ref": "all-detailed.json#/definitions/DV_DURATION"
            }
        },
        "add": {
            "description": "Add a time period to this time.",
            "parameters": {
                "a_diff": {
                    "$ref": "all-detailed.json#/definitions/DV_AMOUNT"
                }
            },
            "required_parameters": [
                "a_diff"
            ],
            "return": {
                "$ref": "all-detailed.json#/definitions/DV_ABSOLUTE_QUANTITY"
            }
        },
        "subtract": {
            "description": "Subtract a duration from this time.",
            "parameters": {
                "a_diif": {
                    "$ref": "all-detailed.json#/definitions/DV_AMOUNT"
                }
            },
            "required_parameters": [
                "a_diif"
            ],
            "return": {
                "$ref": "all-detailed.json#/definitions/DV_ABSOLUTE_QUANTITY"
            }
        },
        "operator=": {
            "parameters": {
                "source": {
                    "$ref": "all-detailed.json#/definitions/DV_TIME"
                }
            },
            "required_parameters": [
                "source"
            ],
            "return": {
                "$ref": "all-detailed.json#/definitions/DV_TIME"
            }
        }
    },
    "$invariants": {
        "Post": "Result = s.is_equal (\u201c=\u201d) or s.is_equal (\u201c<\u201d) or s.is_equal (\u201c>\u201d) or s.is_equal (\u201c<=\u201d) or s.is_equal (\u201c>=\u201d) or s.is_equal (\u201c~\u201d)",
        "Hour_valid": "valid_hour(hour, minute, second)",
        "Minute_valid": "not minute_unknown implies valid_minute (minute)",
        "Second_valid": "not second_unknown implies valid_second (second)",
        "Fractional_second_valid": "has_fractional_second implies (not second_unknown and valid_fractional_second (fractional_second))",
        "Partial_validity": "minute_unknown implies second_unknown",
        "Pre": "normal_range /= Void or normal_status /= Void",
        "Other_reference_ranges_validity": "other_reference_ranges /= Void implies not other_reference_ranges.is_empty",
        "Is_simple_validity": "(normal_range = Void and other_reference_ranges = Void) implies is_simple",
        "Normal_status_validity": "normal_status /= Void implies code_set (Code_set_id_normal_statuses).has_code (normal_status)",
        "Normal_range_and_status_consistency": "(normal_range /= Void and normal_status /= Void) implies (normal_status.code_string.is_equal (\u201cN\u201d) xor not normal_range.has (self))",
        "Post_range": "normal_range /= Void implies Result = normal_range.has (self)",
        "Post_status": "normal_status /= Void implies normal_status.code_string.is_equal (\u201cN\u201d)",
        "Magnitude_status_valid": "magnitude_status /= Void implies valid_magnitude_status (magnitude_status)",
        "Value_valid": "valid_iso8601_time (value)"
    }
}
{
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$id": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/AM/Release-2.0.6/Aom2/C_OBJECT.json",
    "title": "C_OBJECT",
    "description": "Abstract model of constraint on any kind of object node. ",
    "$comments": "Defined in Aom2 IM, abstract, inherits from ARCHETYPE_CONSTRAINT",
    "type": "object",
    "properties": {
        "_type": {
            "enum": [
                "C_COMPLEX_OBJECT_PROXY",
                "ARCHETYPE_SLOT",
                "C_COMPLEX_OBJECT",
                "C_BOOLEAN",
                "C_STRING",
                "C_TERMINOLOGY_CODE",
                "C_INTEGER",
                "C_REAL",
                "C_TIME",
                "C_DATE",
                "C_DATE_TIME",
                "C_DURATION",
                "C_ARCHETYPE_ROOT"
            ]
        },
        "parent": {
            "description": "Parent node, except in the case of the top of a tree, i.e. root `C_COMPLEX_OBJECT` of an archetype definition.",
            "$ref": "all.json#/definitions/ARCHETYPE_CONSTRAINT"
        },
        "soc_parent": {
            "$ref": "all.json#/definitions/C_SECOND_ORDER"
        },
        "rm_type_name": {
            "description": "Reference model type that this node corresponds to. ",
            "$ref": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/BASE/Release-1.1.0/Foundation_types/all.json#/definitions/String"
        },
        "occurrences": {
            "description": "Occurrences of this object node in the data, under the owning attribute. Upper limit can only be greater than 1 if owning attribute has a cardinality of more than 1.\nOnly set if it overrides the parent archetype in the case of specialised archetypes, or else the occurrences inferred from the underlying reference model existence and/or cardinality of the containing attribute.",
            "$ref": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/BASE/Release-1.1.0/Foundation_types/all.json#/definitions/Multiplicity_interval"
        },
        "node_id": {
            "description": "Semantic identifier of this node, used to dis-tinguish sibling nodes. All nodes must have a node_id; for nodes under a container `C_ATTRIBUTE`, the id must be an id-code must be defined in the archetype terminology. For valid structures, all node ids are id-codes.\nFor `C_PRIMITIVE_OBJECTs`, it will have the special value `Primitive_node_id`.\n",
            "$ref": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/BASE/Release-1.1.0/Foundation_types/all.json#/definitions/String"
        },
        "is_deprecated": {
            "description": "True if this node and by implication all sub-nodes are deprecated for use.",
            "$ref": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/BASE/Release-1.1.0/Foundation_types/all.json#/definitions/Boolean"
        },
        "sibling_order": {
            "description": "Optional indicator of order of this node with respect to another sibling. Only meaningful in a specialised archetype for a `C_OBJECT` within a `C_ATTRIBUTE` with `_is_multiple_` = True.",
            "$ref": "all.json#/definitions/SIBLING_ORDER"
        }
    },
    "required": [
        "_type",
        "rm_type_name",
        "node_id"
    ],
    "$abstract": true,
    "$inherits": [
        "all.json#/definitions/ARCHETYPE_CONSTRAINT"
    ],
    "$children": [
        "all.json#/definitions/C_DEFINED_OBJECT",
        "all.json#/definitions/C_COMPLEX_OBJECT_PROXY",
        "all.json#/definitions/ARCHETYPE_SLOT"
    ],
    "$functions": {
        "codes_conformant": {
            "description": "True if a_child_code conforms to a_parent_code in the sense of specialisation, i.e. is a_child_code the same as or more specialised than a_parent_code.",
            "parameters": {
                "a_child_code": {
                    "$ref": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/BASE/Release-1.1.0/Foundation_types/all.json#/definitions/String"
                },
                "a_parent_code": {
                    "$ref": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/BASE/Release-1.1.0/Foundation_types/all.json#/definitions/String"
                }
            },
            "required_parameters": [
                "a_child_code",
                "a_parent_code"
            ],
            "return": {
                "$ref": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/BASE/Release-1.1.0/Foundation_types/all.json#/definitions/Boolean"
            }
        },
        "is_adl_code": {
            "description": "True if a_code is any kind of ADL archetype local code.",
            "parameters": {
                "a_code": {
                    "$ref": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/BASE/Release-1.1.0/Foundation_types/all.json#/definitions/String"
                }
            },
            "required_parameters": [
                "a_code"
            ],
            "return": {
                "$ref": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/BASE/Release-1.1.0/Foundation_types/all.json#/definitions/Boolean"
            }
        },
        "is_id_code": {
            "description": "True if a_code is an 'id' code.",
            "parameters": {
                "a_code": {
                    "$ref": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/BASE/Release-1.1.0/Foundation_types/all.json#/definitions/String"
                }
            },
            "required_parameters": [
                "a_code"
            ],
            "return": {
                "$ref": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/BASE/Release-1.1.0/Foundation_types/all.json#/definitions/Boolean"
            }
        },
        "is_value_code": {
            "description": "True if a_code is an 'at' code, i.e. a code representing a single terminology item.",
            "parameters": {
                "a_code": {
                    "$ref": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/BASE/Release-1.1.0/Foundation_types/all.json#/definitions/String"
                }
            },
            "required_parameters": [
                "a_code"
            ],
            "return": {
                "$ref": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/BASE/Release-1.1.0/Foundation_types/all.json#/definitions/Boolean"
            }
        },
        "is_value_set_code": {
            "description": "True if a_code is an 'ac' code, i.e. a code referring to a terminologyvalue set.",
            "parameters": {
                "a_code": {
                    "$ref": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/BASE/Release-1.1.0/Foundation_types/all.json#/definitions/String"
                }
            },
            "required_parameters": [
                "a_code"
            ],
            "return": {
                "$ref": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/BASE/Release-1.1.0/Foundation_types/all.json#/definitions/Boolean"
            }
        },
        "is_redefined_code": {
            "description": "A code has been specialised if there is a non-zero code index anywhere above the last index e.g. \n\n* at0.0.1 -> False\n* at1.0.1 -> True",
            "parameters": {
                "a_code": {
                    "$ref": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/BASE/Release-1.1.0/Foundation_types/all.json#/definitions/String"
                }
            },
            "required_parameters": [
                "a_code"
            ],
            "return": {
                "$ref": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/BASE/Release-1.1.0/Foundation_types/all.json#/definitions/Boolean"
            }
        },
        "code_exists_at_level": {
            "description": "Is `a_code' valid at level `a_level' or less, i.e. if we remove its trailing specialised part corresponding to specialisation below `a_level', and then any trailing '.0' pieces, do we end up with a valid code? If so it means that the code corresponds to a real node from `a_level' or higher.",
            "parameters": {
                "a-code": {
                    "$ref": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/BASE/Release-1.1.0/Foundation_types/all.json#/definitions/String"
                },
                "a_level": {
                    "$ref": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/BASE/Release-1.1.0/Foundation_types/all.json#/definitions/Integer"
                }
            },
            "required_parameters": [
                "a-code",
                "a_level"
            ],
            "return": {
                "$ref": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/BASE/Release-1.1.0/Foundation_types/all.json#/definitions/Boolean"
            }
        },
        "is_prohibited": {
            "description": "True if this `C_OBJECT` node is prohibited, i.e. if its occurrences is 0..0.",
            "return": {
                "$ref": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/BASE/Release-1.1.0/Foundation_types/all.json#/definitions/Boolean"
            }
        },
        "has_path": {
            "description": "True if the relative path a_path exists at this node.",
            "parameters": {
                "a_path": {
                    "$ref": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/BASE/Release-1.1.0/Foundation_types/all.json#/definitions/String"
                }
            },
            "required_parameters": [
                "a_path"
            ],
            "return": {
                "$ref": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/BASE/Release-1.1.0/Foundation_types/all.json#/definitions/Boolean"
            }
        },
        "path": {
            "description": "Path of this node relative to root of archetype.",
            "return": {
                "$ref": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/BASE/Release-1.1.0/Foundation_types/all.json#/definitions/String"
            }
        },
        "c_conforms_to": {
            "description": "True if constraints represented by this node, ignoring any sub-parts, are narrower or the same as other. \nTypically used during validation of special-ised archetype nodes.",
            "parameters": {
                "other": {
                    "$ref": "all.json#/definitions/ARCHETYPE_CONSTRAINT"
                },
                "rmcc": {
                    "description": "Reference Model conformance checker lambda."
                }
            },
            "required_parameters": [
                "other",
                "rmcc"
            ],
            "return": {
                "$ref": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/BASE/Release-1.1.0/Foundation_types/all.json#/definitions/Boolean"
            }
        },
        "c_congruent_to": {
            "description": "True if constraints represented by this node contain no further redefinitions with respect to the node `_other_`, with the exception of node_id redefnition in `C_OBJECT` nodes. \n\nTypically used to test if an inherited node locally contains any constraints.",
            "parameters": {
                "other": {
                    "$ref": "all.json#/definitions/ARCHETYPE_CONSTRAINT"
                }
            },
            "required_parameters": [
                "other"
            ],
            "return": {
                "$ref": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/BASE/Release-1.1.0/Foundation_types/all.json#/definitions/Boolean"
            }
        },
        "is_second_order_constrained": {
            "description": "True if there is a second order constraint such as a tuple constraint on this node.",
            "return": {
                "$ref": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/BASE/Release-1.1.0/Foundation_types/all.json#/definitions/Boolean"
            }
        },
        "is_root": {
            "description": "True if this node is the root of the tree.",
            "return": {
                "$ref": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/BASE/Release-1.1.0/Foundation_types/all.json#/definitions/Boolean"
            }
        },
        "is_leaf": {
            "description": "True if this node is a terminal node in the tree structure, i.e. having no child nodes.",
            "return": {
                "$ref": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/BASE/Release-1.1.0/Foundation_types/all.json#/definitions/Boolean"
            }
        },
        "specialisation_depth": {
            "description": "Level of specialisation of this archetype node, based on its node_id. The value 0 corresponds to non-specialised, 1 to first-level specialisation and so on. The level is the same as the number of \u2018.\u2019 characters in the node_id code. If node_id is not set, the return value is -1, signifying that the specialisation level should be determined from the nearest parent `C_OBJECT` node having a node_id.",
            "return": {
                "$ref": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/BASE/Release-1.1.0/Foundation_types/all.json#/definitions/Integer"
            }
        },
        "effective_occurrences": {
            "return": {
                "$ref": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/BASE/Release-1.1.0/Foundation_types/all.json#/definitions/Multiplicity_interval"
            }
        },
        "occurrences_conforms_to": {
            "description": "True if this node `_occurrences_` conforms to `_other.occurrences_`; `other' is assumed to be in a flat archetype.",
            "parameters": {
                "other": {
                    "description": "C_OBJECT from a flat parent archetype.",
                    "$ref": "all.json#/definitions/C_OBJECT"
                }
            },
            "required_parameters": [
                "other"
            ],
            "return": {
                "$ref": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/BASE/Release-1.1.0/Foundation_types/all.json#/definitions/Boolean"
            }
        },
        "node_id_conforms_to": {
            "description": "True if this node id conforms to other.node_id, which includes the ids being identical; other is assumed to be in a flat archetype.",
            "parameters": {
                "other": {
                    "$ref": "all.json#/definitions/C_OBJECT"
                }
            },
            "required_parameters": [
                "other"
            ],
            "return": {
                "$ref": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/BASE/Release-1.1.0/Foundation_types/all.json#/definitions/Boolean"
            }
        }
    },
    "$invariants": {
        "Post": "Result = occurrences /= Void and then occurrences.is_prohibited"
    }
}
{
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$id": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/RM/Release-1.0.3/Support/all-detailed.json",
    "title": "Support IM definitions",
    "description": "The rm.support package describes the most basic concepts, required by all other packages, and is comprised of the Definitions, Identification, Terminology and Measurement packages. The semantics defined in these packages allow all other models to use identifiers and to have access to knowledge services like terminology and other reference data. The support package includes the special package assumed_types, describing what basic types are assumed by openEHR in external type systems; this package is a guide for integrating openEHR models proper into the type systems of implementation technologies.",
    "$comments": "Part of RM component, Release-1.0.3 version.",
    "definitions": {
        "CODE_SET_ACCESS": {
            "title": "CODE_SET_ACCESS",
            "description": "Defines an object providing proxy access to a code_set.",
            "$comments": "Defined in Support IM",
            "$functions": {
                "id": {
                    "description": "External identifier of this code set.",
                    "return": {
                        "$ref": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/BASE/Release-1.0.3/Base_types/all-detailed.json#/definitions/String"
                    }
                },
                "all_codes": {
                    "description": "Return all codes known in this code set.",
                    "return": {
                        "type": "array",
                        "items": {
                            "$ref": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/RM/Release-1.0.3/Data_types/all-detailed.json#/definitions/CODE_PHRASE"
                        }
                    }
                },
                "has_lang": {
                    "description": "True if code set knows about 'a_lang' .",
                    "parameters": {
                        "a_lang": {
                            "$ref": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/BASE/Release-1.0.3/Base_types/all-detailed.json#/definitions/String"
                        }
                    },
                    "required_parameters": [
                        "a_lang"
                    ],
                    "return": {
                        "$ref": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/BASE/Release-1.0.3/Base_types/all-detailed.json#/definitions/Boolean"
                    }
                },
                "has_code": {
                    "description": "True if code set knows about  'a_code'.",
                    "parameters": {
                        "a_code": {
                            "$ref": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/BASE/Release-1.0.3/Base_types/all-detailed.json#/definitions/String"
                        }
                    },
                    "required_parameters": [
                        "a_code"
                    ],
                    "return": {
                        "$ref": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/BASE/Release-1.0.3/Base_types/all-detailed.json#/definitions/Boolean"
                    }
                }
            }
        },
        "TERMINOLOGY_ACCESS": {
            "title": "TERMINOLOGY_ACCESS",
            "description": "Defines an object providing proxy access to a terminology. ",
            "$comments": "Defined in Support IM",
            "$functions": {
                "id": {
                    "description": "Identification of this Terminology.",
                    "return": {
                        "$ref": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/BASE/Release-1.0.3/Base_types/all-detailed.json#/definitions/String"
                    }
                },
                "all_codes": {
                    "description": "Return all codes known in this terminology.",
                    "return": {
                        "$ref": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/RM/Release-1.0.3/Data_types/all-detailed.json#/definitions/CODE_PHRASE"
                    }
                },
                "codes_for_group_id": {
                    "description": "Return all codes under grouper 'a_group_id' from this terminology.",
                    "parameters": {
                        "a_group_id": {
                            "$ref": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/BASE/Release-1.0.3/Base_types/all-detailed.json#/definitions/String"
                        }
                    },
                    "required_parameters": [
                        "a_group_id"
                    ],
                    "return": {
                        "type": "array",
                        "items": {
                            "$ref": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/RM/Release-1.0.3/Data_types/all-detailed.json#/definitions/CODE_PHRASE"
                        }
                    }
                },
                "codes_for_group_name": {
                    "description": "Return all codes under grouper whose name in 'a_lang' is 'a_name' from this terminology.",
                    "parameters": {
                        "a_lang": {
                            "$ref": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/BASE/Release-1.0.3/Base_types/all-detailed.json#/definitions/String"
                        },
                        "a_name": {
                            "$ref": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/BASE/Release-1.0.3/Base_types/all-detailed.json#/definitions/String"
                        }
                    },
                    "required_parameters": [
                        "a_lang",
                        "a_name"
                    ],
                    "return": {
                        "type": "array",
                        "items": {
                            "$ref": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/RM/Release-1.0.3/Data_types/all-detailed.json#/definitions/CODE_PHRASE"
                        }
                    }
                },
                "has_code_for_group_id": {
                    "description": "True if  a_code' is known in group  group_id' in the openEHR terminology.",
                    "return": {
                        "$ref": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/BASE/Release-1.0.3/Base_types/all-detailed.json#/definitions/Boolean"
                    }
                },
                "rubric_for_code": {
                    "description": "Return all rubric of code  code' in language  lang'.",
                    "parameters": {
                        "a_code": {
                            "$ref": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/BASE/Release-1.0.3/Base_types/all-detailed.json#/definitions/String"
                        }
                    },
                    "required_parameters": [
                        "a_code"
                    ],
                    "return": {
                        "$ref": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/BASE/Release-1.0.3/Base_types/all-detailed.json#/definitions/String"
                    }
                }
            }
        },
        "EXTERNAL_ENVIRONMENT_ACCESS": {
            "title": "EXTERNAL_ENVIRONMENT_ACCESS",
            "description": "A mixin class providing access to services in the external environment.",
            "$comments": "Defined in Support IM, abstract, inherits from TERMINOLOGY_SERVICE, MEASUREMENT_SERVICE",
            "type": "object",
            "$abstract": true,
            "$inherits": [
                "#/definitions/TERMINOLOGY_SERVICE",
                "#/definitions/MEASUREMENT_SERVICE"
            ],
            "$functions": {
                "is_valid_units_string": {
                    "description": "True if the units string  units' is a valid string according to the HL7 UCUM specification.",
                    "parameters": {
                        "units": {
                            "$ref": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/BASE/Release-1.0.3/Base_types/all-detailed.json#/definitions/String"
                        }
                    },
                    "required_parameters": [
                        "units"
                    ],
                    "return": {
                        "$ref": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/BASE/Release-1.0.3/Base_types/all-detailed.json#/definitions/Boolean"
                    }
                },
                "units_equivalent": {
                    "description": "True if two units strings correspond to the same measured property.",
                    "parameters": {
                        "units1": {
                            "$ref": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/BASE/Release-1.0.3/Base_types/all-detailed.json#/definitions/String"
                        },
                        "units2": {
                            "$ref": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/BASE/Release-1.0.3/Base_types/all-detailed.json#/definitions/String"
                        }
                    },
                    "required_parameters": [
                        "units1",
                        "units2"
                    ],
                    "return": {
                        "$ref": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/BASE/Release-1.0.3/Base_types/all-detailed.json#/definitions/Boolean"
                    }
                },
                "valid_code_set_id": {
                    "description": "Validity function to test if an identifier is in the set defined by this class.",
                    "parameters": {
                        "an_id": {
                            "$ref": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/BASE/Release-1.0.3/Base_types/all-detailed.json#/definitions/String"
                        }
                    },
                    "required_parameters": [
                        "an_id"
                    ],
                    "return": {
                        "$ref": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/BASE/Release-1.0.3/Base_types/all-detailed.json#/definitions/Boolean"
                    }
                },
                "valid_terminology_group_id": {
                    "description": "Validity function to test if an identifier is in the set defined by this class. ",
                    "parameters": {
                        "an_id": {
                            "$ref": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/BASE/Release-1.0.3/Base_types/all-detailed.json#/definitions/Boolean"
                        }
                    },
                    "required_parameters": [
                        "an_id"
                    ],
                    "return": {
                        "$ref": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/BASE/Release-1.0.3/Base_types/all-detailed.json#/definitions/Boolean"
                    }
                },
                "terminology": {
                    "description": "Return an interface to the terminology named name. Allowable names include:-\n* openehr, \n* centc251,\n* any name from are taken from the US NLM UMLS meta-data list at http://www.nlm.nih.gov/research/umls/metaa1.html ",
                    "parameters": {
                        "name": {
                            "$ref": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/BASE/Release-1.0.3/Base_types/all-detailed.json#/definitions/String"
                        }
                    },
                    "required_parameters": [
                        "name"
                    ],
                    "return": {
                        "$ref": "#/definitions/TERMINOLOGY_ACCESS"
                    }
                },
                "code_set": {
                    "description": "Return an interface to the code_set identified by the external identifier name (e.g.  ISO_639-1). ",
                    "parameters": {
                        "name": {
                            "$ref": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/BASE/Release-1.0.3/Base_types/all-detailed.json#/definitions/String"
                        }
                    },
                    "required_parameters": [
                        "name"
                    ],
                    "return": {
                        "$ref": "#/definitions/CODE_SET_ACCESS"
                    }
                },
                "code_set_for_id": {
                    "description": "Return an interface to the code_set identified internally in openEHR by id. \n",
                    "parameters": {
                        "id": {
                            "$ref": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/BASE/Release-1.0.3/Base_types/all-detailed.json#/definitions/String"
                        }
                    },
                    "required_parameters": [
                        "id"
                    ],
                    "return": {
                        "$ref": "#/definitions/CODE_SET_ACCESS"
                    }
                },
                "has_terminology": {
                    "description": "True if terminology named name known by this service. Allowable names include:-\n   *  openehr  \n   * centc251  \n   * any name from are taken from the US NLM UMLS meta-data list at \n      http://www.nlm.nih.gov/research/umls/metaa1.html",
                    "parameters": {
                        "name": {
                            "$ref": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/BASE/Release-1.0.3/Base_types/all-detailed.json#/definitions/String"
                        }
                    },
                    "required_parameters": [
                        "name"
                    ],
                    "return": {
                        "$ref": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/BASE/Release-1.0.3/Base_types/all-detailed.json#/definitions/Boolean"
                    }
                },
                "has_code_set": {
                    "description": "True if code_set linked to internal name (e.g. languages ) is available. ",
                    "parameters": {
                        "name": {
                            "$ref": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/BASE/Release-1.0.3/Base_types/all-detailed.json#/definitions/String"
                        }
                    },
                    "required_parameters": [
                        "name"
                    ],
                    "return": {
                        "$ref": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/BASE/Release-1.0.3/Base_types/all-detailed.json#/definitions/Boolean"
                    }
                },
                "terminology_identifiers": {
                    "description": "Set of all terminology identifiers known in the terminology service. Values from the US NLM UMLS meta-data list at:- http://www.nlm.nih.gov/research/umls/metaa1.html ",
                    "return": {
                        "type": "array",
                        "items": {
                            "$ref": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/BASE/Release-1.0.3/Base_types/all-detailed.json#/definitions/String"
                        }
                    }
                },
                "openehr_code_sets": {
                    "description": "Set of all code set identifiers known in the terminology service. \n",
                    "return": {
                        "$ref": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/BASE/Release-1.0.3/Base_types/all-detailed.json#/definitions/Hash_of_String_String"
                    }
                },
                "code_set_identifiers": {
                    "description": "Set of all code sets identifiers for which there is an internal openEHR name; returned as a Map of ids keyed by internal name. ",
                    "return": {
                        "type": "array",
                        "items": {
                            "$ref": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/BASE/Release-1.0.3/Base_types/all-detailed.json#/definitions/String"
                        }
                    }
                }
            },
            "$invariants": {
                "Pre": "valid_code_set_id (id)"
            }
        },
        "OPENEHR_DEFINITIONS": {
            "title": "OPENEHR_DEFINITIONS",
            "description": "Inheritance class to provide access to constants defined in other packages.",
            "$comments": "Defined in Support IM"
        },
        "BASIC_DEFINITIONS": {
            "title": "BASIC_DEFINITIONS",
            "description": "Defines globally used constant values.",
            "$comments": "Defined in Support IM"
        },
        "OBJECT_REF": {
            "title": "OBJECT_REF",
            "description": "Class describing a reference to another object, which may exist locally or be maintained outside the current namespace, e.g. in another service. Services are usually external, e.g. available in a LAN (including on the same host) or the internet via Corba, SOAP, or some other distributed protocol. However, in small systems they may be part of the same executable as the data containing the Id. ",
            "$comments": "Defined in Support IM",
            "type": "object",
            "properties": {
                "_type": {
                    "enum": [
                        "OBJECT_REF",
                        "ACCESS_GROUP_REF",
                        "PARTY_REF",
                        "LOCATABLE_REF"
                    ]
                },
                "id_namespace": {
                    "description": "Namespace to which this identifier belongs in the local system context (and possibly in any other openEHR compliant environment) e.g.  terminology ,  demographic . These names are not yet standardised. Legal values for the namespace are:\n    local  |  unknown  |  [a-zA-Z][a-zA-Z0-9_-:/&+?]* \n",
                    "$ref": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/BASE/Release-1.0.3/Base_types/all-detailed.json#/definitions/String"
                },
                "type": {
                    "description": "Name of the  class (concrete or abstract) of object to which this identifier type refers, e.g.  PARTY ,  PERSON ,  GUIDELINE  etc. These class names are from the relevant reference model. The type name  ANY  can be used to indicate that any type is accepted (e.g. if the type is unknown). ",
                    "$ref": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/BASE/Release-1.0.3/Base_types/all-detailed.json#/definitions/String"
                },
                "id": {
                    "description": "Globally unique id of an object, regardless of where it is stored.",
                    "$ref": "#/definitions/OBJECT_ID"
                }
            },
            "required": [
                "id_namespace",
                "type",
                "id"
            ],
            "$children": [
                "#/definitions/ACCESS_GROUP_REF",
                "#/definitions/PARTY_REF",
                "#/definitions/LOCATABLE_REF"
            ]
        },
        "OBJECT_ID": {
            "title": "OBJECT_ID",
            "description": "Ancestor class of identifiers of informational objects. Ids may be completely meaningless, in which case their only job is to refer to something, or may carry some information to do with the identified object. \n\nObject ids are used inside an object to identify that object. To identify another object in another service, use an `OBJECT_REF`, or else use a UID for local objects identified by UID. If none of the subtypes is suitable, direct instances of this class may be used. ",
            "$comments": "Defined in Support IM, abstract",
            "type": "object",
            "properties": {
                "_type": {
                    "enum": [
                        "TERMINOLOGY_ID",
                        "GENERIC_ID",
                        "ARCHETYPE_ID",
                        "TEMPLATE_ID",
                        "OBJECT_VERSION_ID",
                        "HIER_OBJECT_ID"
                    ]
                },
                "value": {
                    "description": "The value of the id in the form defined below. ",
                    "$ref": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/BASE/Release-1.0.3/Base_types/all-detailed.json#/definitions/String"
                }
            },
            "required": [
                "_type",
                "value"
            ],
            "$abstract": true,
            "$children": [
                "#/definitions/TERMINOLOGY_ID",
                "#/definitions/UID_BASED_ID",
                "#/definitions/GENERIC_ID",
                "#/definitions/ARCHETYPE_ID",
                "#/definitions/TEMPLATE_ID"
            ]
        },
        "UID": {
            "title": "UID",
            "description": "Abstract parent of classes representing unique identifiers which identify information entities in a durable way. UIDs only ever identify one IE in time or space and are never re-used.",
            "$comments": "Defined in Support IM, abstract",
            "type": "object",
            "properties": {
                "_type": {
                    "enum": [
                        "INTERNET_ID",
                        "UUID",
                        "ISO_OID"
                    ]
                },
                "value": {
                    "description": "The value of the id.",
                    "$ref": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/BASE/Release-1.0.3/Base_types/all-detailed.json#/definitions/String"
                }
            },
            "required": [
                "_type",
                "value"
            ],
            "$abstract": true,
            "$children": [
                "#/definitions/INTERNET_ID",
                "#/definitions/UUID",
                "#/definitions/ISO_OID"
            ],
            "$invariants": {
                "Value_valid": "not value.empty"
            }
        },
        "ACCESS_GROUP_REF": {
            "title": "ACCESS_GROUP_REF",
            "description": "Reference to access group in an access control service.",
            "$comments": "Defined in Support IM, inherits from OBJECT_REF",
            "type": "object",
            "properties": {
                "id_namespace": {
                    "description": "Namespace to which this identifier belongs in the local system context (and possibly in any other openEHR compliant environment) e.g.  terminology ,  demographic . These names are not yet standardised. Legal values for the namespace are:\n    local  |  unknown  |  [a-zA-Z][a-zA-Z0-9_-:/&+?]* \n",
                    "$ref": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/BASE/Release-1.0.3/Base_types/all-detailed.json#/definitions/String"
                },
                "type": {
                    "description": "Name of the  class (concrete or abstract) of object to which this identifier type refers, e.g.  PARTY ,  PERSON ,  GUIDELINE  etc. These class names are from the relevant reference model. The type name  ANY  can be used to indicate that any type is accepted (e.g. if the type is unknown). ",
                    "$ref": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/BASE/Release-1.0.3/Base_types/all-detailed.json#/definitions/String"
                },
                "id": {
                    "description": "Globally unique id of an object, regardless of where it is stored.",
                    "$ref": "#/definitions/OBJECT_ID"
                }
            },
            "required": [
                "id_namespace",
                "type",
                "id"
            ],
            "$inherits": [
                "#/definitions/OBJECT_REF"
            ],
            "$invariants": {
                "Type_validity": "type.is_equal (\u201cACCESS_GROUP\u201d)"
            }
        },
        "PARTY_REF": {
            "title": "PARTY_REF",
            "description": "Identifier for parties in a demographic or identity service. There are typically a number of subtypes of the `PARTY` class, including `PERSON`, `ORGANISATION`, etc. Abstract supertypes are allowed if the referenced object is of a type not known by the current implementation of this class (in other words, if the demographic model is changed by the addition of a new `PARTY` or `ACTOR` subtypes, valid `PARTY_REFs` can still be constructed to them). ",
            "$comments": "Defined in Support IM, inherits from OBJECT_REF",
            "type": "object",
            "properties": {
                "id_namespace": {
                    "description": "Namespace to which this identifier belongs in the local system context (and possibly in any other openEHR compliant environment) e.g.  terminology ,  demographic . These names are not yet standardised. Legal values for the namespace are:\n    local  |  unknown  |  [a-zA-Z][a-zA-Z0-9_-:/&+?]* \n",
                    "$ref": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/BASE/Release-1.0.3/Base_types/all-detailed.json#/definitions/String"
                },
                "type": {
                    "description": "Name of the  class (concrete or abstract) of object to which this identifier type refers, e.g.  PARTY ,  PERSON ,  GUIDELINE  etc. These class names are from the relevant reference model. The type name  ANY  can be used to indicate that any type is accepted (e.g. if the type is unknown). ",
                    "$ref": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/BASE/Release-1.0.3/Base_types/all-detailed.json#/definitions/String"
                },
                "id": {
                    "description": "Globally unique id of an object, regardless of where it is stored.",
                    "$ref": "#/definitions/OBJECT_ID"
                }
            },
            "required": [
                "id_namespace",
                "type",
                "id"
            ],
            "$inherits": [
                "#/definitions/OBJECT_REF"
            ],
            "$invariants": {
                "Type_validity": "type.is_equal(\u201cPERSON\u201d) or type.is_equal(\u201cORGANISATION\u201d) or type.is_equal(\u201cGROUP\u201d) or type.is_equal(\u201cAGENT\u201d)or type.is_equal(\u201cROLE\u201d) or type.is_equal(\u201cPARTY\u201d) or type.is_equal(\u201cACTOR\u201d)"
            }
        },
        "LOCATABLE_REF": {
            "title": "LOCATABLE_REF",
            "description": "Purpose Reference to a `LOCATABLE` instance inside the top-level content structure inside a `VERSION<T>`; the path attribute is applied to the object that `_VERSION.data_` points to. ",
            "$comments": "Defined in Support IM, inherits from OBJECT_REF",
            "type": "object",
            "properties": {
                "id_namespace": {
                    "description": "Namespace to which this identifier belongs in the local system context (and possibly in any other openEHR compliant environment) e.g.  terminology ,  demographic . These names are not yet standardised. Legal values for the namespace are:\n    local  |  unknown  |  [a-zA-Z][a-zA-Z0-9_-:/&+?]* \n",
                    "$ref": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/BASE/Release-1.0.3/Base_types/all-detailed.json#/definitions/String"
                },
                "type": {
                    "description": "Name of the  class (concrete or abstract) of object to which this identifier type refers, e.g.  PARTY ,  PERSON ,  GUIDELINE  etc. These class names are from the relevant reference model. The type name  ANY  can be used to indicate that any type is accepted (e.g. if the type is unknown). ",
                    "$ref": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/BASE/Release-1.0.3/Base_types/all-detailed.json#/definitions/String"
                },
                "id": {
                    "description": "The identifier of the Version. ",
                    "$ref": "#/definitions/UID_BASED_ID"
                },
                "path": {
                    "description": "The path to an instance in question, as an absolute path with respect to the object found at `_VERSION.data_`. An empty path means that the object referred to by id being specified. ",
                    "$ref": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/BASE/Release-1.0.3/Base_types/all-detailed.json#/definitions/String"
                }
            },
            "required": [
                "id_namespace",
                "type",
                "id"
            ],
            "$inherits": [
                "#/definitions/OBJECT_REF"
            ],
            "$functions": {
                "as_uri": {
                    "description": "A URI form of the reference, created by concatenating the following: ehr://  + id.value +  /  + path",
                    "return": {
                        "$ref": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/BASE/Release-1.0.3/Base_types/all-detailed.json#/definitions/String"
                    }
                }
            }
        },
        "INTERNET_ID": {
            "title": "INTERNET_ID",
            "description": "Model of a reverse internet domain, as used to uniquely identify an internet domain. In the form of a dot-separated string in the reverse order of a domain name, specified by IETF RFC 1034 (http://www.ietf.org/rfc/rfc1034.txt). ",
            "$comments": "Defined in Support IM, inherits from UID",
            "type": "object",
            "properties": {
                "value": {
                    "description": "The value of the id.",
                    "$ref": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/BASE/Release-1.0.3/Base_types/all-detailed.json#/definitions/String"
                }
            },
            "required": [
                "value"
            ],
            "$inherits": [
                "#/definitions/UID"
            ],
            "$invariants": {
                "Value_valid": "not value.empty"
            }
        },
        "UUID": {
            "title": "UUID",
            "description": "Model of the DCE Universal Unique Identifier or UUID which takes the form of hexadecimal integers separated by hyphens, following the pattern 8-4-4-4-12 as defined by the Open Group, CDE 1.1 Remote Procedure Call specification, Appendix A. Also known as a GUID.",
            "$comments": "Defined in Support IM, inherits from UID",
            "type": "object",
            "properties": {
                "value": {
                    "description": "The value of the id.",
                    "$ref": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/BASE/Release-1.0.3/Base_types/all-detailed.json#/definitions/String"
                }
            },
            "required": [
                "value"
            ],
            "$inherits": [
                "#/definitions/UID"
            ],
            "$invariants": {
                "Value_valid": "not value.empty"
            }
        },
        "ISO_OID": {
            "title": "ISO_OID",
            "description": "Model of ISO's Object Identifier (oid) as defined by the standard ISO/IEC 8824. Oids are formed from integers separated by dots. Each non-leaf node in an Oid starting from the left corresponds to an assigning authority, and identifies that authority's namespace, inside which the remaining part of the identifier is locally unique. ",
            "$comments": "Defined in Support IM, inherits from UID",
            "type": "object",
            "properties": {
                "value": {
                    "description": "The value of the id.",
                    "$ref": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/BASE/Release-1.0.3/Base_types/all-detailed.json#/definitions/String"
                }
            },
            "required": [
                "value"
            ],
            "$inherits": [
                "#/definitions/UID"
            ],
            "$invariants": {
                "Value_valid": "not value.empty"
            }
        },
        "TERMINOLOGY_ID": {
            "title": "TERMINOLOGY_ID",
            "description": "Identifier for terminologies such as accessed via a terminology query service. In this class, the value attribute identifies the Terminology in the terminology service, e.g.  SNOMED-CT . A terminology is assumed to be in a particular language, which must be explicitly specified.\n\nThe value if the id attribute is the precise terminology id identifier, including actual release (i.e. actual version), local modifications etc; e.g. ICPC2.\n\nLexical form: `name [ '(' version ')' ]`.\n",
            "$comments": "Defined in Support IM, inherits from OBJECT_ID",
            "type": "object",
            "properties": {
                "value": {
                    "description": "The value of the id in the form defined below. ",
                    "$ref": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/BASE/Release-1.0.3/Base_types/all-detailed.json#/definitions/String"
                }
            },
            "required": [
                "value"
            ],
            "$inherits": [
                "#/definitions/OBJECT_ID"
            ],
            "$functions": {
                "name": {
                    "description": "Return the terminology id (which includes the  version  in some cases). Distinct names correspond to distinct (i.e. non-compatible) terminologies. Thus the names  ICD10AM  and  ICD10  refer to distinct terminologies. ",
                    "return": {
                        "$ref": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/BASE/Release-1.0.3/Base_types/all-detailed.json#/definitions/String"
                    }
                },
                "version_id": {
                    "description": "Version of this terminology, if versioning supported, else the empty string. ",
                    "return": {
                        "$ref": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/BASE/Release-1.0.3/Base_types/all-detailed.json#/definitions/String"
                    }
                }
            }
        },
        "UID_BASED_ID": {
            "title": "UID_BASED_ID",
            "description": "Abstract model of UID-based identifiers consisting of a root part and an optional extension. Lexical form: `root '::' extension`.",
            "$comments": "Defined in Support IM, abstract, inherits from OBJECT_ID",
            "type": "object",
            "properties": {
                "_type": {
                    "enum": [
                        "OBJECT_VERSION_ID",
                        "HIER_OBJECT_ID"
                    ]
                },
                "value": {
                    "description": "The value of the id in the form defined below. ",
                    "$ref": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/BASE/Release-1.0.3/Base_types/all-detailed.json#/definitions/String"
                }
            },
            "required": [
                "_type",
                "value"
            ],
            "$abstract": true,
            "$inherits": [
                "#/definitions/OBJECT_ID"
            ],
            "$children": [
                "#/definitions/OBJECT_VERSION_ID",
                "#/definitions/HIER_OBJECT_ID"
            ],
            "$functions": {
                "root": {
                    "description": "The identifier of the conceptual namespace in which the object exists, within the identification scheme. Returns the part to the left of the first  '::' separator, if any, or else the whole string. ",
                    "return": {
                        "$ref": "#/definitions/UID"
                    }
                },
                "extension": {
                    "description": "Optional local identifier of the object within the context of the root identifier. Returns the part to the right of the first  '::' separator if any, or else any empty String.",
                    "return": {
                        "$ref": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/BASE/Release-1.0.3/Base_types/all-detailed.json#/definitions/String"
                    }
                },
                "has_extension": {
                    "description": "True if extension /= Void.",
                    "return": {
                        "$ref": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/BASE/Release-1.0.3/Base_types/all-detailed.json#/definitions/Boolean"
                    }
                }
            },
            "$invariants": {
                "Has_extension_valid": "extension.is_empty xor has_extension"
            }
        },
        "GENERIC_ID": {
            "title": "GENERIC_ID",
            "description": "Generic identifier type for identifiers whose format is otherwise unknown to openEHR. Includes an attribute for naming the identification scheme (which may well be local). ",
            "$comments": "Defined in Support IM, inherits from OBJECT_ID",
            "type": "object",
            "properties": {
                "value": {
                    "description": "The value of the id in the form defined below. ",
                    "$ref": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/BASE/Release-1.0.3/Base_types/all-detailed.json#/definitions/String"
                },
                "scheme": {
                    "description": "Name of the scheme to which this identifier conforms. Ideally this name will be recognisable globally but realistically it may be a local ad hoc scheme whose name is not controlled or standardised in any way. ",
                    "$ref": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/BASE/Release-1.0.3/Base_types/all-detailed.json#/definitions/String"
                }
            },
            "required": [
                "value",
                "scheme"
            ],
            "$inherits": [
                "#/definitions/OBJECT_ID"
            ]
        },
        "ARCHETYPE_ID": {
            "title": "ARCHETYPE_ID",
            "description": "Identifier for archetypes. Ideally these would identify globally unique archetypes.\n\nLexical form: `rm_originator  '-' rm_name '-' rm_entity '.' concept_name {  '-' specialisation }*  '.v' number`.",
            "$comments": "Defined in Support IM, inherits from OBJECT_ID",
            "type": "object",
            "properties": {
                "value": {
                    "description": "The value of the id in the form defined below. ",
                    "$ref": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/BASE/Release-1.0.3/Base_types/all-detailed.json#/definitions/String"
                }
            },
            "required": [
                "value"
            ],
            "$inherits": [
                "#/definitions/OBJECT_ID"
            ],
            "$functions": {
                "qualified_rm_entity": {
                    "description": "Globally qualified reference model entity, e.g.  `openehr-COMPOSITION-OBSERVATION`.",
                    "return": {
                        "$ref": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/BASE/Release-1.0.3/Base_types/all-detailed.json#/definitions/String"
                    }
                },
                "domain_concept": {
                    "description": "Name of the concept represented by this archetype, including specialisation, e.g. \n Biochemistry_result-cholesterol . ",
                    "return": {
                        "$ref": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/BASE/Release-1.0.3/Base_types/all-detailed.json#/definitions/String"
                    }
                },
                "rm_originator": {
                    "description": "Organisation originating the reference model on which this archetype is based, e.g. \n openehr ,  cen ,  hl7 . ",
                    "return": {
                        "$ref": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/BASE/Release-1.0.3/Base_types/all-detailed.json#/definitions/String"
                    }
                },
                "rm_name": {
                    "description": "Name of the reference model, e.g. rim,  ehr_rm,  en13606 . ",
                    "return": {
                        "$ref": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/BASE/Release-1.0.3/Base_types/all-detailed.json#/definitions/String"
                    }
                },
                "rm_entity": {
                    "description": "Name of the ontological level within the reference model to which this archetype is targeted, e.g. for openEHR,  folder ,  composition ,  section ,  entry .",
                    "return": {
                        "$ref": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/BASE/Release-1.0.3/Base_types/all-detailed.json#/definitions/String"
                    }
                },
                "specialisation": {
                    "description": "Name of specialisation of concept, if this archetype is a specialisation of another archetype, e.g.  cholesterol .",
                    "return": {
                        "$ref": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/BASE/Release-1.0.3/Base_types/all-detailed.json#/definitions/String"
                    }
                },
                "version_id": {
                    "description": "Version of this archetype. \n",
                    "return": {
                        "$ref": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/BASE/Release-1.0.3/Base_types/all-detailed.json#/definitions/String"
                    }
                }
            }
        },
        "TEMPLATE_ID": {
            "title": "TEMPLATE_ID",
            "description": "Identifier for templates. Lexical form to be determined.",
            "$comments": "Defined in Support IM, inherits from OBJECT_ID",
            "type": "object",
            "properties": {
                "value": {
                    "description": "The value of the id in the form defined below. ",
                    "$ref": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/BASE/Release-1.0.3/Base_types/all-detailed.json#/definitions/String"
                }
            },
            "required": [
                "value"
            ],
            "$inherits": [
                "#/definitions/OBJECT_ID"
            ]
        },
        "OBJECT_VERSION_ID": {
            "title": "OBJECT_VERSION_ID",
            "description": "Globally unique identifier for one version of a versioned object; lexical form: `object_id  '::' creating_system_id  '::' version_tree_id`.",
            "$comments": "Defined in Support IM, inherits from UID_BASED_ID",
            "type": "object",
            "properties": {
                "value": {
                    "description": "The value of the id in the form defined below. ",
                    "$ref": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/BASE/Release-1.0.3/Base_types/all-detailed.json#/definitions/String"
                }
            },
            "required": [
                "value"
            ],
            "$inherits": [
                "#/definitions/UID_BASED_ID"
            ],
            "$functions": {
                "root": {
                    "description": "The identifier of the conceptual namespace in which the object exists, within the identification scheme. Returns the part to the left of the first  '::' separator, if any, or else the whole string. ",
                    "return": {
                        "$ref": "#/definitions/UID"
                    }
                },
                "extension": {
                    "description": "Optional local identifier of the object within the context of the root identifier. Returns the part to the right of the first  '::' separator if any, or else any empty String.",
                    "return": {
                        "$ref": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/BASE/Release-1.0.3/Base_types/all-detailed.json#/definitions/String"
                    }
                },
                "has_extension": {
                    "description": "True if extension /= Void.",
                    "return": {
                        "$ref": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/BASE/Release-1.0.3/Base_types/all-detailed.json#/definitions/Boolean"
                    }
                },
                "object_id": {
                    "description": "Unique identifier for logical object of which this identifier identifies one version; normally the object_id will be the unique identifier of the version container containing the version referred to by this `OBJECT_VERSION_ID` instance. ",
                    "return": {
                        "$ref": "#/definitions/UID"
                    }
                },
                "version_tree_id": {
                    "description": "Tree identifier of this version with respect to other versions in the same version tree, as either 1 or 3 part dot-separated numbers, e.g.  `1`, `2.1.4`. ",
                    "return": {
                        "$ref": "#/definitions/VERSION_TREE_ID"
                    }
                },
                "creating_system_id": {
                    "description": "Identifier of the system that created the Version corresponding to this Object version id.",
                    "return": {
                        "$ref": "#/definitions/UID"
                    }
                },
                "is_branch": {
                    "description": "True if this version identifier represents a branch.",
                    "return": {
                        "$ref": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/BASE/Release-1.0.3/Base_types/all-detailed.json#/definitions/Boolean"
                    }
                }
            },
            "$invariants": {
                "Has_extension_valid": "extension.is_empty xor has_extension"
            }
        },
        "HIER_OBJECT_ID": {
            "title": "HIER_OBJECT_ID",
            "description": "Concrete type corresponding to hierarchical identifiers of the form defined by `UID_BASED_ID`. ",
            "$comments": "Defined in Support IM, inherits from UID_BASED_ID",
            "type": "object",
            "properties": {
                "value": {
                    "description": "The value of the id in the form defined below. ",
                    "$ref": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/BASE/Release-1.0.3/Base_types/all-detailed.json#/definitions/String"
                }
            },
            "required": [
                "value"
            ],
            "$inherits": [
                "#/definitions/UID_BASED_ID"
            ],
            "$functions": {
                "root": {
                    "description": "The identifier of the conceptual namespace in which the object exists, within the identification scheme. Returns the part to the left of the first  '::' separator, if any, or else the whole string. ",
                    "return": {
                        "$ref": "#/definitions/UID"
                    }
                },
                "extension": {
                    "description": "Optional local identifier of the object within the context of the root identifier. Returns the part to the right of the first  '::' separator if any, or else any empty String.",
                    "return": {
                        "$ref": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/BASE/Release-1.0.3/Base_types/all-detailed.json#/definitions/String"
                    }
                },
                "has_extension": {
                    "description": "True if extension /= Void.",
                    "return": {
                        "$ref": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/BASE/Release-1.0.3/Base_types/all-detailed.json#/definitions/Boolean"
                    }
                }
            },
            "$invariants": {
                "Has_extension_valid": "extension.is_empty xor has_extension"
            }
        },
        "VERSION_TREE_ID": {
            "title": "VERSION_TREE_ID",
            "description": "Version tree identifier for one version. Lexical form: \n\n`trunk_version [ '.' branch_number '.' branch_version ]`",
            "$comments": "Defined in Support IM",
            "type": "object",
            "properties": {
                "value": {
                    "description": "String form of this identifier.",
                    "$ref": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/BASE/Release-1.0.3/Base_types/all-detailed.json#/definitions/String"
                }
            },
            "required": [
                "value"
            ],
            "$functions": {
                "trunk_version": {
                    "description": "Trunk version number; numbering starts at 1. ",
                    "return": {
                        "$ref": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/BASE/Release-1.0.3/Base_types/all-detailed.json#/definitions/String"
                    }
                },
                "is_branch": {
                    "description": "True if this version identifier represents a branch, i.e. has branch_number and branch_version parts.",
                    "return": {
                        "$ref": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/BASE/Release-1.0.3/Base_types/all-detailed.json#/definitions/Boolean"
                    }
                },
                "branch_number": {
                    "description": "Number of branch from the trunk point; numbering starts at 1. ",
                    "return": {
                        "$ref": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/BASE/Release-1.0.3/Base_types/all-detailed.json#/definitions/String"
                    }
                },
                "branch_version": {
                    "description": "Version of the branch; numbering starts at 1. ",
                    "return": {
                        "$ref": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/BASE/Release-1.0.3/Base_types/all-detailed.json#/definitions/String"
                    }
                }
            },
            "$invariants": {
                "Value_valid": "not value.is_empty",
                "Trunk_version_valid": "trunk_version /= Void and then trunk_version.is_integer and then trunk_version.as_integer >= 1",
                "Branch_number_valid": "branch_number /= Void implies branch_number.is_integer and then branch_number.as_integer >= 1",
                "Branch_version_valid": "branch_version /= Void implies branch_version.is_integer and then branch_version.as_integer >= 1",
                "Branch_validity": "(branch_number = Void and branch_version = Void ) xor (branch_number /= Void and branch_version /= Void )",
                "Is_branch_validity": "is_branch xor branch_number = Void",
                "Is_first_validity": "not is_first xor trunk_version.is_equal(\u201c1\u201d)"
            }
        },
        "MEASUREMENT_SERVICE": {
            "title": "MEASUREMENT_SERVICE",
            "description": "Defines an object providing proxy access to a measurement information service.",
            "$comments": "Defined in Support IM",
            "properties": {
                "_type": {
                    "enum": [
                        "MEASUREMENT_SERVICE"
                    ]
                }
            },
            "$children": [
                "#/definitions/EXTERNAL_ENVIRONMENT_ACCESS"
            ],
            "$functions": {
                "is_valid_units_string": {
                    "description": "True if the units string  units' is a valid string according to the HL7 UCUM specification.",
                    "parameters": {
                        "units": {
                            "$ref": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/BASE/Release-1.0.3/Base_types/all-detailed.json#/definitions/String"
                        }
                    },
                    "required_parameters": [
                        "units"
                    ],
                    "return": {
                        "$ref": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/BASE/Release-1.0.3/Base_types/all-detailed.json#/definitions/Boolean"
                    }
                },
                "units_equivalent": {
                    "description": "True if two units strings correspond to the same measured property.",
                    "parameters": {
                        "units1": {
                            "$ref": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/BASE/Release-1.0.3/Base_types/all-detailed.json#/definitions/String"
                        },
                        "units2": {
                            "$ref": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/BASE/Release-1.0.3/Base_types/all-detailed.json#/definitions/String"
                        }
                    },
                    "required_parameters": [
                        "units1",
                        "units2"
                    ],
                    "return": {
                        "$ref": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/BASE/Release-1.0.3/Base_types/all-detailed.json#/definitions/Boolean"
                    }
                }
            }
        },
        "OPENEHR_TERMINOLOGY_GROUP_IDENTIFIERS": {
            "title": "OPENEHR_TERMINOLOGY_GROUP_IDENTIFIERS",
            "description": "List of identifiers for groups in the openEHR terminology. ",
            "$comments": "Defined in Support IM",
            "properties": {
                "_type": {
                    "enum": [
                        "OPENEHR_TERMINOLOGY_GROUP_IDENTIFIERS",
                        "TERMINOLOGY_SERVICE"
                    ]
                }
            },
            "$children": [
                "#/definitions/TERMINOLOGY_SERVICE"
            ],
            "$functions": {
                "valid_terminology_group_id": {
                    "description": "Validity function to test if an identifier is in the set defined by this class. ",
                    "parameters": {
                        "an_id": {
                            "$ref": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/BASE/Release-1.0.3/Base_types/all-detailed.json#/definitions/Boolean"
                        }
                    },
                    "required_parameters": [
                        "an_id"
                    ],
                    "return": {
                        "$ref": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/BASE/Release-1.0.3/Base_types/all-detailed.json#/definitions/Boolean"
                    }
                }
            }
        },
        "OPENEHR_CODE_SET_IDENTIFIERS": {
            "title": "OPENEHR_CODE_SET_IDENTIFIERS",
            "description": "List of identifiers for code sets in the openEHR terminology. ",
            "$comments": "Defined in Support IM",
            "properties": {
                "_type": {
                    "enum": [
                        "OPENEHR_CODE_SET_IDENTIFIERS",
                        "TERMINOLOGY_SERVICE"
                    ]
                }
            },
            "$children": [
                "#/definitions/TERMINOLOGY_SERVICE"
            ],
            "$functions": {
                "valid_code_set_id": {
                    "description": "Validity function to test if an identifier is in the set defined by this class.",
                    "parameters": {
                        "an_id": {
                            "$ref": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/BASE/Release-1.0.3/Base_types/all-detailed.json#/definitions/String"
                        }
                    },
                    "required_parameters": [
                        "an_id"
                    ],
                    "return": {
                        "$ref": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/BASE/Release-1.0.3/Base_types/all-detailed.json#/definitions/Boolean"
                    }
                }
            }
        },
        "TERMINOLOGY_SERVICE": {
            "title": "TERMINOLOGY_SERVICE",
            "description": "Defines an object providing proxy access to a terminology service. ",
            "$comments": "Defined in Support IM, inherits from OPENEHR_TERMINOLOGY_GROUP_IDENTIFIERS, OPENEHR_CODE_SET_IDENTIFIERS",
            "type": "object",
            "properties": {
                "_type": {
                    "enum": [
                        "TERMINOLOGY_SERVICE"
                    ]
                }
            },
            "$inherits": [
                "#/definitions/OPENEHR_TERMINOLOGY_GROUP_IDENTIFIERS",
                "#/definitions/OPENEHR_CODE_SET_IDENTIFIERS"
            ],
            "$children": [
                "#/definitions/EXTERNAL_ENVIRONMENT_ACCESS"
            ],
            "$functions": {
                "valid_code_set_id": {
                    "description": "Validity function to test if an identifier is in the set defined by this class.",
                    "parameters": {
                        "an_id": {
                            "$ref": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/BASE/Release-1.0.3/Base_types/all-detailed.json#/definitions/String"
                        }
                    },
                    "required_parameters": [
                        "an_id"
                    ],
                    "return": {
                        "$ref": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/BASE/Release-1.0.3/Base_types/all-detailed.json#/definitions/Boolean"
                    }
                },
                "valid_terminology_group_id": {
                    "description": "Validity function to test if an identifier is in the set defined by this class. ",
                    "parameters": {
                        "an_id": {
                            "$ref": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/BASE/Release-1.0.3/Base_types/all-detailed.json#/definitions/Boolean"
                        }
                    },
                    "required_parameters": [
                        "an_id"
                    ],
                    "return": {
                        "$ref": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/BASE/Release-1.0.3/Base_types/all-detailed.json#/definitions/Boolean"
                    }
                },
                "terminology": {
                    "description": "Return an interface to the terminology named name. Allowable names include:-\n* openehr, \n* centc251,\n* any name from are taken from the US NLM UMLS meta-data list at http://www.nlm.nih.gov/research/umls/metaa1.html ",
                    "parameters": {
                        "name": {
                            "$ref": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/BASE/Release-1.0.3/Base_types/all-detailed.json#/definitions/String"
                        }
                    },
                    "required_parameters": [
                        "name"
                    ],
                    "return": {
                        "$ref": "#/definitions/TERMINOLOGY_ACCESS"
                    }
                },
                "code_set": {
                    "description": "Return an interface to the code_set identified by the external identifier name (e.g.  ISO_639-1). ",
                    "parameters": {
                        "name": {
                            "$ref": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/BASE/Release-1.0.3/Base_types/all-detailed.json#/definitions/String"
                        }
                    },
                    "required_parameters": [
                        "name"
                    ],
                    "return": {
                        "$ref": "#/definitions/CODE_SET_ACCESS"
                    }
                },
                "code_set_for_id": {
                    "description": "Return an interface to the code_set identified internally in openEHR by id. \n",
                    "parameters": {
                        "id": {
                            "$ref": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/BASE/Release-1.0.3/Base_types/all-detailed.json#/definitions/String"
                        }
                    },
                    "required_parameters": [
                        "id"
                    ],
                    "return": {
                        "$ref": "#/definitions/CODE_SET_ACCESS"
                    }
                },
                "has_terminology": {
                    "description": "True if terminology named name known by this service. Allowable names include:-\n   *  openehr  \n   * centc251  \n   * any name from are taken from the US NLM UMLS meta-data list at \n      http://www.nlm.nih.gov/research/umls/metaa1.html",
                    "parameters": {
                        "name": {
                            "$ref": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/BASE/Release-1.0.3/Base_types/all-detailed.json#/definitions/String"
                        }
                    },
                    "required_parameters": [
                        "name"
                    ],
                    "return": {
                        "$ref": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/BASE/Release-1.0.3/Base_types/all-detailed.json#/definitions/Boolean"
                    }
                },
                "has_code_set": {
                    "description": "True if code_set linked to internal name (e.g. languages ) is available. ",
                    "parameters": {
                        "name": {
                            "$ref": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/BASE/Release-1.0.3/Base_types/all-detailed.json#/definitions/String"
                        }
                    },
                    "required_parameters": [
                        "name"
                    ],
                    "return": {
                        "$ref": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/BASE/Release-1.0.3/Base_types/all-detailed.json#/definitions/Boolean"
                    }
                },
                "terminology_identifiers": {
                    "description": "Set of all terminology identifiers known in the terminology service. Values from the US NLM UMLS meta-data list at:- http://www.nlm.nih.gov/research/umls/metaa1.html ",
                    "return": {
                        "type": "array",
                        "items": {
                            "$ref": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/BASE/Release-1.0.3/Base_types/all-detailed.json#/definitions/String"
                        }
                    }
                },
                "openehr_code_sets": {
                    "description": "Set of all code set identifiers known in the terminology service. \n",
                    "return": {
                        "$ref": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/BASE/Release-1.0.3/Base_types/all-detailed.json#/definitions/Hash_of_String_String"
                    }
                },
                "code_set_identifiers": {
                    "description": "Set of all code sets identifiers for which there is an internal openEHR name; returned as a Map of ids keyed by internal name. ",
                    "return": {
                        "type": "array",
                        "items": {
                            "$ref": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/BASE/Release-1.0.3/Base_types/all-detailed.json#/definitions/String"
                        }
                    }
                }
            },
            "$invariants": {
                "Pre": "valid_code_set_id (id)"
            }
        }
    },
    "$component": "RM",
    "$version": "Release-1.0.3"
}
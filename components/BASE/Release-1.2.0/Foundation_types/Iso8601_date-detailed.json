{
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$id": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/BASE/Release-1.2.0/Foundation_types/Iso8601_date-detailed.json",
    "title": "Iso8601_date",
    "description": "Represents an ISO 8601 date, including partial and extended forms. Value may be:\n\n* `YYYY-MM-DD` (extended, preferred)\n* `YYYYMMDD` (compact)\n* a partial invariant.\n\nSee `Time_definitions._valid_iso8601_date()_` for validity.",
    "$comments": "Defined in Foundation_types IM, inherits from Iso8601_type",
    "type": "object",
    "properties": {
        "_type": {
            "enum": [
                "Iso8601_date",
                "DV_DATE"
            ]
        },
        "value": {
            "description": "Representation of all descendants is a single String.",
            "$ref": "all-detailed.json#/definitions/String"
        }
    },
    "required": [
        "value"
    ],
    "$inherits": [
        "all-detailed.json#/definitions/Iso8601_type"
    ],
    "$children": [
        "https://specifications.openehr.org/releases/ITS-JSON/latest/components/RM/Release-1.1.0/Data_types/all-detailed.json#/definitions/DV_DATE"
    ],
    "$functions": {
        "valid_year": {
            "description": "True if `y >= 0`.",
            "parameters": {
                "y": {
                    "$ref": "all-detailed.json#/definitions/Integer"
                }
            },
            "required_parameters": [
                "y"
            ],
            "return": {
                "$ref": "all-detailed.json#/definitions/Boolean"
            }
        },
        "valid_month": {
            "description": "True if `m >= 1 and m <= months_in_year`.",
            "parameters": {
                "m": {
                    "$ref": "all-detailed.json#/definitions/Integer"
                }
            },
            "required_parameters": [
                "m"
            ],
            "return": {
                "$ref": "all-detailed.json#/definitions/Boolean"
            }
        },
        "valid_day": {
            "description": "True if `d >= 1 and d <= days_in_month (m, y)`.",
            "parameters": {
                "y": {
                    "$ref": "all-detailed.json#/definitions/Integer"
                },
                "m": {
                    "$ref": "all-detailed.json#/definitions/Integer"
                },
                "d": {
                    "$ref": "all-detailed.json#/definitions/Integer"
                }
            },
            "required_parameters": [
                "y",
                "m",
                "d"
            ],
            "return": {
                "$ref": "all-detailed.json#/definitions/Boolean"
            }
        },
        "valid_hour": {
            "description": "True if `(h >= 0 and h < Hours_in_day) or (h = Hours_in_day and m = 0 and s = 0)` .",
            "parameters": {
                "h": {
                    "$ref": "all-detailed.json#/definitions/Integer"
                },
                "m": {
                    "$ref": "all-detailed.json#/definitions/Integer"
                },
                "s": {
                    "$ref": "all-detailed.json#/definitions/Integer"
                }
            },
            "required_parameters": [
                "h",
                "m",
                "s"
            ],
            "return": {
                "$ref": "all-detailed.json#/definitions/Boolean"
            }
        },
        "valid_minute": {
            "description": "True if `m >= 0 and m < Minutes_in_hour`.",
            "parameters": {
                "m": {
                    "$ref": "all-detailed.json#/definitions/Integer"
                }
            },
            "required_parameters": [
                "m"
            ],
            "return": {
                "$ref": "all-detailed.json#/definitions/Boolean"
            }
        },
        "valid_second": {
            "description": "True if `s >= 0 and s < Seconds_in_minute` .",
            "parameters": {
                "s": {
                    "$ref": "all-detailed.json#/definitions/Integer"
                }
            },
            "required_parameters": [
                "s"
            ],
            "return": {
                "$ref": "all-detailed.json#/definitions/Boolean"
            }
        },
        "valid_fractional_second": {
            "description": "True if `fs >= 0.0` and `fs < 1.0` .",
            "parameters": {
                "fs": {
                    "$ref": "all-detailed.json#/definitions/Double"
                }
            },
            "required_parameters": [
                "fs"
            ],
            "return": {
                "$ref": "all-detailed.json#/definitions/Boolean"
            }
        },
        "valid_iso8601_date": {
            "description": "String is a valid ISO 8601 date, i.e. takes the complete form:\n\n* `YYYY-MM-DD` (extended, preferred) or one of the partial forms `YYYY-MM` or `YYYY`\n* `YYYYMMDD` (compact) or a partial variant `YYYYMM`.\n\nWhere:\n\n* `YYYY` is the string form of any positive number in the range `0000` - `9999` (zero-filled to four digits)\n* `MM` is `01` - `12` (zero-filled to two digits)\n* `DD` is `01` - `31` (zero-filled to two digits)\n\nThe combinations of `YYYY`, `MM`, `DD` numbers must be correct with respect to the Gregorian calendar.",
            "parameters": {
                "s": {
                    "$ref": "all-detailed.json#/definitions/String"
                }
            },
            "required_parameters": [
                "s"
            ],
            "return": {
                "$ref": "all-detailed.json#/definitions/Boolean"
            }
        },
        "valid_iso8601_time": {
            "description": "String is a valid ISO 8601 date, i.e. takes the form:\n\n* `hh:mm:ss[(,|.)s+][Z|\u00b1hh[:mm]]` (extended)\n* `hhmmss[(,|.)s+][Z|\u00b1hh[mm]]` (compact)\n* or one of the partial forms:\n** `hh:mm` (extended)\n** `hhmm` or `hh` (compact)\n\nwith an additional optional timezone indicator of:\n\n* `Z` or `\u00b1hh[:mm]` (extended)  `\u00b1hh[mm]` (compact)\n\nWhere:\n\n* `hh` is \"00\" - \"23\" (0-filled to two digits)\n* `mm` is \"00\" - \"59\" (0-filled to two digits)\n* `ss` is \"00\" - \"60\" (0-filled to two digits)\n* `[(,|.)s+]` is an optional string consisting of a comma or decimal point followed by numeric string of 1 or more digits, representing a fractional second\n* `Z` is a literal meaning UTC (modern replacement for GMT), i.e. timezone `+0000`\n",
            "parameters": {
                "s": {
                    "$ref": "all-detailed.json#/definitions/String"
                }
            },
            "required_parameters": [
                "s"
            ],
            "return": {
                "$ref": "all-detailed.json#/definitions/Boolean"
            }
        },
        "valid_iso8601_date_time": {
            "description": "String is a valid ISO 8601 date-time, i.e. takes the form:\n\n* `YYYY-MM-DDThh:mm:ss[(,|.)s+][Z|\u00b1hh[:mm]]` (extended)\n* `YYYYMMDDThhmmss[(,|.)s+][Z|\u00b1hh[mm]]` (compact)\n* or one of the partial forms:\n** `YYYY-MM-DDThh:mm` or `YYYY-MM-DDThh` (extended)\n** `YYYYMMDDThhmm` or `YYYYMMDDThh` (compact)",
            "parameters": {
                "s": {
                    "$ref": "all-detailed.json#/definitions/String"
                }
            },
            "required_parameters": [
                "s"
            ],
            "return": {
                "$ref": "all-detailed.json#/definitions/Boolean"
            }
        },
        "valid_iso8601_duration": {
            "description": "String is a valid ISO 8601 duration, i.e. takes the form:\n\n* `P[nnY][nnM][nnW][nnD][T[nnH][nnM][nnS]]`\n\nWhere each nn represents a number of years, months, etc. `nnW` represents a number of 7-day weeks.\n\nNote: allowing the `W` designator in the same expression as other designators is an exception to the published standard, but necessary in clinical information (typically for representing pregnancy duration).",
            "parameters": {
                "s": {
                    "description": "String is a valid ISO 8601 duration, i.e. takes the form:\n\n* `P[nnY][nnM][nnW][nnD][T[nnH][nnM][nnS]]`\n\nWhere each `nn` represents a number of years, months, etc. `nnW` represents a number of 7- day weeks.\n\nNOTE: allowing the `W` designator in the same expression as other designators is an exception to the published standard, but necessary in clinical information (typically for representing pregnancy duration).",
                    "$ref": "all-detailed.json#/definitions/String"
                }
            },
            "required_parameters": [
                "s"
            ],
            "return": {
                "$ref": "all-detailed.json#/definitions/Boolean"
            }
        },
        "less_than": {
            "description": "Arithmetic value comparison. Returns True if current object is less than `_other_`. This operator is effected and/or redefined in descendants to provide the appropriate ordering semantics for concrete types.\n\nIn conjunction with `=`, enables the definition of the related functions `_greater_than_()` etc.",
            "parameters": {
                "other": {
                    "$ref": "all-detailed.json#/definitions/Ordered"
                }
            },
            "required_parameters": [
                "other"
            ],
            "return": {
                "$ref": "all-detailed.json#/definitions/Boolean"
            }
        },
        "less_than_or_equal": {
            "description": "True if current object less than or equal to `_other_`.",
            "parameters": {
                "other": {
                    "$ref": "all-detailed.json#/definitions/Ordered"
                }
            },
            "required_parameters": [
                "other"
            ],
            "return": {
                "$ref": "all-detailed.json#/definitions/Boolean"
            }
        },
        "greater_than": {
            "description": "True if current object greater than `_other_`.",
            "parameters": {
                "other": {
                    "$ref": "all-detailed.json#/definitions/Ordered"
                }
            },
            "required_parameters": [
                "other"
            ],
            "return": {
                "$ref": "all-detailed.json#/definitions/Boolean"
            }
        },
        "greater_than_or_equal": {
            "description": "True if current object greater than or equal to `_other_`.",
            "parameters": {
                "other": {
                    "$ref": "all-detailed.json#/definitions/Ordered"
                }
            },
            "required_parameters": [
                "other"
            ],
            "return": {
                "$ref": "all-detailed.json#/definitions/Boolean"
            }
        },
        "is_partial": {
            "description": "True if this date is partial, i.e. if days or more is missing.",
            "return": {
                "$ref": "all-detailed.json#/definitions/Boolean"
            }
        },
        "is_extended": {
            "description": "True if this date uses `'-'` separators.",
            "return": {
                "$ref": "all-detailed.json#/definitions/Boolean"
            }
        },
        "year": {
            "description": "Extract the year part of the date as an Integer.",
            "return": {
                "$ref": "all-detailed.json#/definitions/Integer"
            }
        },
        "month": {
            "description": "Extract the month part of the date as an Integer, or return 0 if not present.",
            "return": {
                "$ref": "all-detailed.json#/definitions/Integer"
            }
        },
        "day": {
            "description": "Extract the day part of the date as an Integer, or return 0 if not present.",
            "return": {
                "$ref": "all-detailed.json#/definitions/Integer"
            }
        },
        "timezone": {
            "description": "Timezone; may be Void.",
            "return": {
                "$ref": "all-detailed.json#/definitions/Iso8601_timezone"
            }
        },
        "month_unknown": {
            "description": "Indicates whether month in year is unknown. If so, the date is of the form `\"YYYY\"`.",
            "return": {
                "$ref": "all-detailed.json#/definitions/Boolean"
            }
        },
        "day_unknown": {
            "description": "Indicates whether day in month is unknown. If so, and month is known, the date is of the form `\"YYYY-MM\"` or `\"YYYYMM\"`.",
            "return": {
                "$ref": "all-detailed.json#/definitions/Boolean"
            }
        },
        "as_string": {
            "description": "Return string value in extended format.",
            "return": {
                "$ref": "all-detailed.json#/definitions/String"
            }
        },
        "add": {
            "description": "Arithmetic addition of a duration to a date.",
            "parameters": {
                "a_diff": {
                    "$ref": "all-detailed.json#/definitions/Iso8601_duration"
                }
            },
            "required_parameters": [
                "a_diff"
            ],
            "return": {
                "$ref": "all-detailed.json#/definitions/Iso8601_date"
            }
        },
        "subtract": {
            "description": "Arithmetic subtraction of a duration from a date.",
            "parameters": {
                "a_diff": {
                    "$ref": "all-detailed.json#/definitions/Iso8601_duration"
                }
            },
            "required_parameters": [
                "a_diff"
            ],
            "return": {
                "$ref": "all-detailed.json#/definitions/Iso8601_date"
            }
        },
        "diff": {
            "description": "Difference of two dates.",
            "parameters": {
                "a_date": {
                    "$ref": "all-detailed.json#/definitions/Iso8601_date"
                }
            },
            "required_parameters": [
                "a_date"
            ],
            "return": {
                "$ref": "all-detailed.json#/definitions/Iso8601_duration"
            }
        },
        "add_nominal": {
            "description": "Addition of nominal duration represented by `_a_diff_`. For example, a duration of `'P1Y'` means advance to the same date next year, with the exception of the date 29 February in a leap year, to which the addition of a nominal year will result in 28 February of the following year. Similarly, `'P1M'` is understood here as a nominal month, the addition of which will result in one of:\n\n* the same day in the following month, if it exists, or;\n* one or two days less where the following month is shorter, or;\n* in the case of adding a month to the date 31 Jan, the result will be 28 Feb in a non-leap year (i.e. three less) and 29 Feb in a leap year (i.e. two less).",
            "parameters": {
                "a_diff": {
                    "$ref": "all-detailed.json#/definitions/Iso8601_duration"
                }
            },
            "required_parameters": [
                "a_diff"
            ],
            "return": {
                "$ref": "all-detailed.json#/definitions/Iso8601_date"
            }
        },
        "subtract_nominal": {
            "description": "Subtraction of nominal duration represented by `_a_diff_`. See `_add_nominal_()` for semantics.",
            "parameters": {
                "a_diff": {
                    "$ref": "all-detailed.json#/definitions/Iso8601_duration"
                }
            },
            "required_parameters": [
                "a_diff"
            ],
            "return": {
                "$ref": "all-detailed.json#/definitions/Iso8601_date"
            }
        }
    },
    "$invariants": {
        "Post": "Result = fs >= 0.0 and fs < 1.0",
        "Post_result": "Result = (other <= self)",
        "Year_valid": "valid_year (year)",
        "Month_valid": "not month_unknown implies valid_month (month)",
        "Day_valid": "not day_unknown implies valid_day (year, month, day)",
        "Partial_validity": "month_unknown implies day_unknown",
        "Pre": "not day_unknown"
    }
}
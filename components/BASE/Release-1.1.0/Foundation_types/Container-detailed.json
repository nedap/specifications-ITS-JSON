{
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$id": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/BASE/Release-1.1.0/Foundation_types/Container-detailed.json",
    "title": "Container",
    "description": "Abstract ancestor of container types whose items are addressable in some way.",
    "$comments": "Defined in Foundation_types IM, abstract",
    "type": "array",
    "properties": {
        "_type": {
            "enum": [
                "Hash",
                "List",
                "Set",
                "Array",
                "Hash<String, Hash<String, Hash<String, String>>>",
                "Hash<String, Hash<String, String>>",
                "Hash<String, String>",
                "Hash<String, List<String>>",
                "Hash<String, TRANSLATION_DETAILS>",
                "Hash<String, RESOURCE_DESCRIPTION_ITEM>",
                "List<String>",
                "Set<String>"
            ]
        }
    },
    "required": [
        "_type"
    ],
    "$abstract": true,
    "$children": [
        "all-detailed.json#/definitions/Hash",
        "all-detailed.json#/definitions/List",
        "all-detailed.json#/definitions/Set",
        "all-detailed.json#/definitions/Array"
    ],
    "$functions": {
        "has": {
            "description": "Test for membership of a value.",
            "parameters": {
                "v": {
                    "$ref": "all-detailed.json#/definitions/T"
                }
            },
            "required_parameters": [
                "v"
            ],
            "return": {
                "$ref": "all-detailed.json#/definitions/Boolean"
            }
        },
        "count": {
            "description": "Number of items in container.",
            "return": {
                "$ref": "all-detailed.json#/definitions/Integer"
            }
        },
        "is_empty": {
            "description": "True if container is empty.",
            "return": {
                "$ref": "all-detailed.json#/definitions/Boolean"
            }
        }
    }
}